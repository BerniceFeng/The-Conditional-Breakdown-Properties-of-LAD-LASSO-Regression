{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1bMrnTA9Spyiry4svEnezJtgXMdsW9LUU","timestamp":1670123298849},{"file_id":"1rqsdfleSiQd9kslRZLeZvjYMZo524gYL","timestamp":1667620976741},{"file_id":"1MW-DvA-fRoQD-NjMD4u6btRS7o4yxRZN","timestamp":1667539313310}],"authorship_tag":"ABX9TyNZ3JE1Rn62a9q0aAITlmxg"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"Oa_LQQd9M9yO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1671087323146,"user_tz":300,"elapsed":27295,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"3561e4f2-8841-4e41-e939-d24f14a2cdf0"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting gurobipy\n","  Downloading gurobipy-10.0.0-cp38-cp38-manylinux2014_x86_64.whl (12.8 MB)\n","\u001b[K     |████████████████████████████████| 12.8 MB 7.0 MB/s \n","\u001b[?25hInstalling collected packages: gurobipy\n","Successfully installed gurobipy-10.0.0\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting xlsxwriter\n","  Downloading XlsxWriter-3.0.3-py3-none-any.whl (149 kB)\n","\u001b[K     |████████████████████████████████| 149 kB 7.2 MB/s \n","\u001b[?25hInstalling collected packages: xlsxwriter\n","Successfully installed xlsxwriter-3.0.3\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","import numpy as np\n","np.set_printoptions(formatter={'float_kind':'{:f}'.format})\n","from itertools import combinations\n","import pandas as pd\n","%pip install gurobipy\n","import openpyxl\n","%pip install xlsxwriter\n","import xlsxwriter\n","from pathlib import Path"]},{"cell_type":"code","source":["def read_data(name):\n","  X = np.loadtxt(open(\"/content/drive/My Drive/Bernice Research/June 17/%s.csv\" % name, \"rb\"), delimiter=\",\", skiprows=1)\n","  y = X[:, -1] \n","  X = X[:, 0:-1]\n","  X = np.c_[np.ones(X.shape[0]),X]\n","  return X, y"],"metadata":{"id":"dflbh6B0DTWj","executionInfo":{"status":"ok","timestamp":1671087323147,"user_tz":300,"elapsed":10,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["#LAD-LASSO LP for defg\n","def LAD_LASSO(X, y, lbd=0):\n","  import gurobipy as gp\n","  from gurobipy import GRB\n","  from gurobipy import quicksum\n","\n","  n, p = X.shape\n","\n","  m = gp.Model()\n","\n","  m.Params.LogToConsole = 0\n","\n","  rpls = m.addMVar((n,), vtype=GRB.CONTINUOUS)\n","  rmns = m.addMVar((n,), vtype=GRB.CONTINUOUS)\n","  bpls = m.addMVar((p,), vtype=GRB.CONTINUOUS)\n","  bmns = m.addMVar((p,), vtype=GRB.CONTINUOUS)\n","\n","  m.update()\n","\n","  m.addConstr(rpls - rmns + X @ bpls - X @ bmns  == y)\n","        \n","  m.setObjective(quicksum(rpls[i] for i in range(n)) + quicksum(rmns[i] for i in range(n)) + lbd*(quicksum(bpls[j] for j in range(1,p)) + quicksum(bmns[j] for j in range(1,p))), GRB.MINIMIZE)\n","\n","  m.optimize()\n","\n","  return round(m.objval, 6), [round(num, 6) for num in list(bpls.X-bmns.X)]\n","  # print(rpls.X-rmns.X)\n","  # print(bpls.X)\n","  # print(bmns.X)\n","  # print(rpls.X)\n","  # print(rmns.X)"],"metadata":{"id":"sbKdjVUTIG4I","executionInfo":{"status":"ok","timestamp":1671087323147,"user_tz":300,"elapsed":8,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["#LAD-LASSO LP for defg\n","def LAD_LASSO_C(X, y, lbd=0):\n","  import gurobipy as gp\n","  from gurobipy import GRB\n","  from gurobipy import quicksum\n","\n","  n, p = X.shape\n","\n","  m = gp.Model()\n","\n","  m.Params.LogToConsole = 0\n","\n","  rpls = m.addMVar((n,), vtype=GRB.CONTINUOUS)\n","  rmns = m.addMVar((n,), vtype=GRB.CONTINUOUS)\n","  bpls = m.addMVar((p,), vtype=GRB.CONTINUOUS)\n","  bmns = m.addMVar((p,), vtype=GRB.CONTINUOUS)\n","\n","  m.update()\n","\n","  m.addConstr(rpls - rmns + X @ bpls - X @ bmns  == y)\n","        \n","  m.setObjective(quicksum(rpls[i] for i in range(n)) + quicksum(rmns[i] for i in range(n)) + lbd*(quicksum(bpls[j] for j in range(p)) + quicksum(bmns[j] for j in range(p))), GRB.MINIMIZE)\n","\n","  m.optimize()\n","\n","  return round(m.objval, 6), [round(num, 6) for num in list(bpls.X-bmns.X)]\n","  # return \"%.6f\" % m.objval, [\"%.6f\" % num for num in list(bpls.X-bmns.X)]\n","  # print(rpls.X-rmns.X)\n","  # print(bpls.X)\n","  # print(bmns.X)\n","  # print(rpls.X)\n","  # print(rmns.X)"],"metadata":{"id":"lMmvWcZtqdYk","executionInfo":{"status":"ok","timestamp":1671087323147,"user_tz":300,"elapsed":8,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["def mean_center_scale(name):\n","  #Center and Scale dataset by mean\n","  X,y = read_data(name)\n","  l = len(X[0])\n","  c = np.zeros(l)\n","  sd = np.zeros(l)\n","  for i in range(l):\n","    c[i] = np.mean(X[:,i])\n","    sd[i] = np.std(X[:,i])\n","  for j in range(len(X)):\n","    for k in range(l):\n","      X[j,k] = (X[j,k]-c[k])/sd[k]\n","  X = X[:,1:]\n","  my = np.mean(y)\n","  for j in range(len(X)):\n","    y[j] = y[j] - my\n","  n, p = X.shape\n","  return X,y"],"metadata":{"id":"hf9JasakABnu","executionInfo":{"status":"ok","timestamp":1671087323148,"user_tz":300,"elapsed":9,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["def mean_center(name):\n","  #Center but not Scale dataset by mean\n","  X,y = read_data(name)\n","  l = len(X[0])\n","  c = np.zeros(l)\n","  for i in range(l):\n","    c[i] = np.mean(X[:,i])\n","  for j in range(len(X)):\n","    for k in range(l):\n","      X[j,k] = X[j,k]-c[k]\n","  X = X[:,1:]\n","  my = np.mean(y)\n","  for j in range(len(X)):\n","    y[j] = y[j] - my\n","  n, p = X.shape\n","  return X,y"],"metadata":{"id":"6uNdvqk0AGlr","executionInfo":{"status":"ok","timestamp":1671087323148,"user_tz":300,"elapsed":8,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["def sd_scale(name):\n","  #Scale but not Center dataset by mean\n","  X,y = read_data(name)\n","  l = len(X[0])\n","  sd = np.zeros(l)\n","  for i in range(l):\n","    sd[i] = np.std(X[:,i])\n","  for j in range(len(X)):\n","    for k in range(l):\n","      X[j,k] = X[j,k]/sd[k]\n","  X = X[:,1:]\n","  X = np.c_[np.ones(X.shape[0]),X]\n","  n, p = X.shape\n","  return X,y"],"metadata":{"id":"ZNkx2EECne4n","executionInfo":{"status":"ok","timestamp":1671087323148,"user_tz":300,"elapsed":8,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["def sd_scale_y(name):\n","  #Scale but not Center dataset by mean\n","  X,y = read_data(name)\n","  l = len(X[0])\n","  sd = np.zeros(l)\n","  for i in range(l):\n","    sd[i] = np.std(X[:,i])\n","  for j in range(len(X)):\n","    for k in range(l):\n","      X[j,k] = X[j,k]/sd[k]\n","  X = X[:,1:]\n","  X = np.c_[np.ones(X.shape[0]),X]\n","  sdy = np.std(y)\n","  for j in range(len(X)):\n","    y[j] = y[j]/sdy\n","  n, p = X.shape\n","  return X,y"],"metadata":{"id":"tux7ayM8u6Gm","executionInfo":{"status":"ok","timestamp":1671087323148,"user_tz":300,"elapsed":8,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["def sd_scale_y(name):\n","  #Scale but not Center dataset by mean\n","  X,y = read_data(name)\n","  l = len(X[0])\n","  sd = np.zeros(l)\n","  for i in range(l):\n","    sd[i] = np.std(X[:,i])\n","  for j in range(len(X)):\n","    for k in range(l):\n","      X[j,k] = X[j,k]/sd[k]\n","  X = X[:,1:]\n","  X = np.c_[np.ones(X.shape[0]),X]\n","  sdy = np.std(y)\n","  for j in range(len(X)):\n","    y[j] = y[j]/sdy\n","  n, p = X.shape\n","  return X,y"],"metadata":{"id":"3vEVlltfW3JF","executionInfo":{"status":"ok","timestamp":1671087323305,"user_tz":300,"elapsed":165,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["def sd_y(name):\n","  X,y = read_data(name)\n","  sdy = np.std(y)\n","  return sdy"],"metadata":{"id":"FlqjsGDVXQil","executionInfo":{"status":"ok","timestamp":1671087323305,"user_tz":300,"elapsed":2,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["sd_y('hbk')"],"metadata":{"id":"X4qKbxZVXegk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1671087324559,"user_tz":300,"elapsed":1255,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"5fcfab39-db86-4f14-8498-11292ea7faf0"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3.469458875514868"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["def median_center_scale(name):\n","  #Center and Scale dataset by median\n","  X,y = read_data(name)\n","  l = len(X[0])\n","  c = np.zeros(l)\n","  sd = np.zeros(l)\n","  for i in range(l):\n","    c[i] = np.median(X[:,i])\n","    sd[i] = np.mean(np.absolute(X[:,i] - np.median(X[:,i])))\n","  for j in range(len(X)):\n","    for k in range(l):\n","      X[j,k] = (X[j,k]-c[k])/sd[k]\n","  X = X[:,1:]\n","  my = np.median(y)\n","  for j in range(len(X)):\n","    y[j] = y[j] - my\n","  n, p = X.shape\n","  return X,y"],"metadata":{"id":"fYPDzR8bFstk","executionInfo":{"status":"ok","timestamp":1671087324738,"user_tz":300,"elapsed":183,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["def median_center(name):\n","  #Center but not Scale dataset by median\n","  X,y = read_data(name)\n","  l = len(X[0])\n","  c = np.zeros(l)\n","  sd = np.zeros(l)\n","  for i in range(l):\n","    c[i] = np.median(X[:,i])\n","  for j in range(len(X)):\n","    for k in range(l):\n","      X[j,k] = X[j,k]-c[k]\n","  X = X[:,1:]\n","  my = np.median(y)\n","  for j in range(len(X)):\n","    y[j] = y[j] - my\n","  n, p = X.shape\n","  return X,y"],"metadata":{"id":"eBTFgzzEF_uN","executionInfo":{"status":"ok","timestamp":1671087324738,"user_tz":300,"elapsed":5,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["def mad_scale(name):\n","  #Scale but not Center dataset by median\n","  X,y = read_data(name)\n","  l = len(X[0])\n","  c = np.zeros(l)\n","  sd = np.zeros(l)\n","  for i in range(l):\n","    sd[i] = np.mean(np.absolute(X[:,i] - np.median(X[:,i])))\n","  for j in range(len(X)):\n","    for k in range(l):\n","      X[j,k] = X[j,k]/sd[k]\n","  X = X[:,1:]\n","  X = np.c_[np.ones(X.shape[0]),X]\n","  n, p = X.shape\n","  return X,y"],"metadata":{"id":"L0mJ4chusUnJ","executionInfo":{"status":"ok","timestamp":1671087324738,"user_tz":300,"elapsed":5,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["def mad_scale_y(name):\n","  #Scale but not Center dataset by median\n","  X,y = read_data(name)\n","  l = len(X[0])\n","  c = np.zeros(l)\n","  sd = np.zeros(l)\n","  for i in range(l):\n","    sd[i] = np.mean(np.absolute(X[:,i] - np.median(X[:,i])))\n","  for j in range(len(X)):\n","    for k in range(l):\n","      X[j,k] = X[j,k]/sd[k]\n","  X = X[:,1:]\n","  X = np.c_[np.ones(X.shape[0]),X]\n","  sdy = np.mean(np.absolute(y - np.median(y)))\n","  for j in range(len(X)):\n","    y[j] = y[j] /sdy\n","  n, p = X.shape\n","  return X,y"],"metadata":{"id":"ss9D_ESpviK4","executionInfo":{"status":"ok","timestamp":1671087324738,"user_tz":300,"elapsed":5,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["def mad_y(name):\n","  X,y = read_data(name)\n","  sdy = np.mean(np.absolute(y - np.median(y)))\n","  return sdy"],"metadata":{"id":"WF_GHyY5Xhfd","executionInfo":{"status":"ok","timestamp":1671087324739,"user_tz":300,"elapsed":5,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["mad_y('hbk')"],"metadata":{"id":"RQbply2NX4i-","executionInfo":{"status":"ok","timestamp":1671087324739,"user_tz":300,"elapsed":5,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"1a5e20a7-c8f1-4002-ddd6-96920c47d67f","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.7546666666666666"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["def mad_scale_print(name):\n","  #Scale but not Center dataset by median\n","  X,y = read_data(name)\n","  l = len(X[0])\n","  c = np.zeros(l)\n","  sd = np.zeros(l)\n","  for i in range(l):\n","    sd[i] = np.mean(np.absolute(X[:,i] - np.median(X[:,i])))\n","  print(sd)\n","  for j in range(len(X)):\n","    for k in range(l):\n","      X[j,k] = X[j,k]/sd[k]\n","  X = X[:,1:]\n","  X = np.c_[np.ones(X.shape[0]),X]\n","  n, p = X.shape\n","  return X,y"],"metadata":{"id":"IHm4LG1-QheM","executionInfo":{"status":"ok","timestamp":1671087324739,"user_tz":300,"elapsed":5,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["msp = mad_scale_print('hbk')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wkgkJw58Qote","executionInfo":{"status":"ok","timestamp":1671087324739,"user_tz":300,"elapsed":5,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"994eef5a-514e-4cdf-af74-2424f16050a1"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.000000 2.374667 4.488000 6.253333]\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-18-e8fdbfd6d9f9>:12: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]}]},{"cell_type":"code","source":["def breakdown(X):\n","  n,p = X.shape\n","  c = list(combinations(list(range(0,n)), p-1))\n","  absxtimexi_list = []\n","  count = 0\n","  for i in range(len(list(c))):\n","    Xb = np.take(X, list(c[i]), 0)\n","    r = np.array([np.r_[1,np.zeros(p-1)]])\n","    xx = np.r_[r,Xb]\n","    v = np.matrix.transpose(np.zeros((1,p-1)))\n","    v = np.r_[np.array([np.array([1])]),v]\n","    try:\n","      xi = np.matmul(np.linalg.inv(xx),v)\n","    except:\n","      xi = np.matmul(np.linalg.pinv(xx),v)\n","    xtimesxi = np.matmul(X,xi).flatten()\n","    absxtimesxi = np.absolute(xtimesxi)\n","    sortedabs = np.sort(absxtimesxi)[::-1]\n","    absxtimexi_list.append(sortedabs)\n","  absxtimexi_list = np.array(absxtimexi_list)\n","  totsums = np.sum(absxtimexi_list, axis = 1)\n","  for i in range(1,len(list(c))):\n","    partsums = np.sum(absxtimexi_list[:,:i], axis = 1)\n","    cc = np.true_divide(partsums,totsums)\n","    mcc = max(cc)\n","    if mcc > 0.5:\n","      return i"],"metadata":{"id":"MJ-1tBQCXyXC","executionInfo":{"status":"ok","timestamp":1671087324740,"user_tz":300,"elapsed":4,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["def X_lasso(name, lbd=1):\n","  X,y = read_data(name)\n","  n, p = X.shape\n","  XX = - lbd * np.eye(p)\n","  XX[0][0] = 0\n","  X1 = np.concatenate((X, XX))\n","  return X1"],"metadata":{"id":"2z7wTQvygUSV","executionInfo":{"status":"ok","timestamp":1671087324740,"user_tz":300,"elapsed":4,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["def X_lasso_C(X, lbd=1):\n","  n, p = X.shape\n","  XX = - lbd * np.eye(p)\n","  X1 = np.concatenate((X, XX))\n","  return X1"],"metadata":{"id":"SvmQcGHHohMB","executionInfo":{"status":"ok","timestamp":1671087324740,"user_tz":300,"elapsed":4,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["def select_col(X, beta_l):\n","  l = []\n","  for b in range(len(beta_l)):\n","    if abs(beta_l[b] - 0) > 0.000001:\n","      l.append(b)\n","  xx = np.take(X, l, 1)\n","  return breakdown(xx)"],"metadata":{"id":"WNx679sYiw18","executionInfo":{"status":"ok","timestamp":1671087324740,"user_tz":300,"elapsed":4,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["def select_col_uncenter(X0, beta_l):\n","  l = [0]\n","  for b in range(len(beta_l)):\n","    if abs(beta_l[b] - 0) > 0.000001:\n","      l.append(b+1)\n","  xx = np.take(X0, l, 1)\n","  return breakdown(xx)"],"metadata":{"id":"SXkbvnD_1g_u","executionInfo":{"status":"ok","timestamp":1671087324740,"user_tz":300,"elapsed":4,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["def print_sheet(dataset, method, end, step, start=0):\n","  array = []\n","  array.append(['lambda',\t'beta',\t'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'])\n","  if method == 'a' or method == 'aa':\n","    X, y = read_data(dataset)\n","  if method == 'b' or method == 'bb':\n","    X, y = sd_scale(dataset)\n","  if method == 'c' or method == 'cc':\n","    X, y = mad_scale(dataset)\n","  cb = breakdown(X)\n","  for i in range(end+1):\n","    lbd = round(start+i*(step),4)\n","    obj, beta_l = LAD_LASSO(X, y, lbd)\n","    cbl = breakdown(X_lasso(dataset, lbd))\n","    cbs = select_col(X, beta_l)\n","    array.append([lbd, beta_l, obj, cb, cbl, cbs])\n","  print(array)\n","  df = pd.DataFrame(array)\n","  filepath = '/content/drive/My Drive/Bernice Research/Dec 2/%s.xlsx' % dataset\n","  if Path(filepath).is_file():\n","    book = openpyxl.load_workbook(filepath)\n","    writer = pd.ExcelWriter(filepath, engine='openpyxl') \n","    writer.book = book\n","    writer.sheets = dict((ws.title, ws) for ws in book.worksheets)\n","    df.to_excel(writer, index=False, header=False, sheet_name = method)\n","    writer.save()\n","  else:\n","    df.to_excel(filepath, index=False, header=False, sheet_name = method)"],"metadata":{"id":"0JIVNcuAPTqy","executionInfo":{"status":"ok","timestamp":1671087324740,"user_tz":300,"elapsed":4,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["def print_sheet_center(dataset, method, end, step, start=0):\n","  array = []\n","  array.append(['lambda',\t'beta',\t'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'])\n","  if method == 'd' or method == 'dd':\n","    X, y = mean_center(dataset)\n","    X0, y0 = read_data(dataset)\n","  if method == 'e' or method == 'ee':\n","    X, y = median_center(dataset)\n","    X0, y0 = read_data(dataset)\n","  if method == 'f' or method == 'ff':\n","    X, y = mean_center_scale(dataset)\n","    X0, y0 = sd_scale(dataset)\n","  if method == 'g' or method == 'gg':\n","    X, y = median_center_scale(dataset)\n","    X0, y0 = mad_scale(dataset)\n","  cb = breakdown(X)\n","  for i in range(end+1):\n","    lbd = round(start+i*(step),4)\n","    obj, beta_l = LAD_LASSO_C(X, y, lbd)\n","    cbl = breakdown(X_lasso_C(X, lbd))\n","    cbsu = select_col_uncenter(X0, beta_l)\n","    if method == 'd' or method == 'f' or method == 'dd' or method == 'ff':\n","      beta_l.insert(0,round(np.mean(y0),6))\n","    if method == 'e' or method == 'g' or method == 'ee' or method == 'gg':\n","      beta_l.insert(0,round(np.median(y0),6))\n","    array.append([lbd, beta_l, obj, cb, cbl, cbsu])\n","  print(array)\n","  df = pd.DataFrame(array)\n","  filepath = '/content/drive/My Drive/Bernice Research/Dec 2/%s.xlsx' % dataset\n","  if Path(filepath).is_file():\n","    book = openpyxl.load_workbook(filepath)\n","    writer = pd.ExcelWriter(filepath, engine='openpyxl') \n","    writer.book = book\n","    writer.sheets = dict((ws.title, ws) for ws in book.worksheets)\n","    df.to_excel(writer, index=False, header=False, sheet_name = method)\n","    writer.save()\n","  else:\n","    df.to_excel(filepath, index=False, header=False, sheet_name = method)"],"metadata":{"id":"CIMgP5vBwbuu","executionInfo":{"status":"ok","timestamp":1671087324740,"user_tz":300,"elapsed":4,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["def print_single(dataset, method, lbd=0):\n","  array = []\n","  array.append(['lambda',\t'beta',\t'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'])\n","  if method == 'aaa':\n","    X, y = read_data(dataset)\n","  if method == 'bbb':\n","    X, y = sd_scale(dataset)\n","  if method == 'ccc':\n","    X, y = mad_scale(dataset)\n","  cb = breakdown(X)\n","  obj, beta_l = LAD_LASSO(X, y, lbd)\n","  cbl = breakdown(X_lasso(dataset, lbd))\n","  cbs = select_col(X, beta_l)\n","  array.append([lbd, beta_l, obj, cb, cbl, cbs])\n","  print(array)\n","  df = pd.DataFrame(array)\n","  filepath = '/content/drive/My Drive/Bernice Research/Dec 2/%s.xlsx' % dataset\n","  if Path(filepath).is_file():\n","    book = openpyxl.load_workbook(filepath)\n","    writer = pd.ExcelWriter(filepath, engine='openpyxl') \n","    writer.book = book\n","    writer.sheets = dict((ws.title, ws) for ws in book.worksheets)\n","    df.to_excel(writer, index=False, header=False, sheet_name = method)\n","    writer.save()\n","  else:\n","    df.to_excel(filepath, index=False, header=False, sheet_name = method)"],"metadata":{"id":"Cc6Vb80gTnza","executionInfo":{"status":"ok","timestamp":1671087324939,"user_tz":300,"elapsed":3,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["def print_single_center(dataset, method, lbd=0):\n","  array = []\n","  array.append(['lambda',\t'beta',\t'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'])\n","  if method == 'ddd':\n","    X, y = mean_center(dataset)\n","    X0, y0 = read_data(dataset)\n","  if method == 'eee':\n","    X, y = median_center(dataset)\n","    X0, y0 = read_data(dataset)\n","  if method == 'fff':\n","    X, y = mean_center_scale(dataset)\n","    X0, y0 = sd_scale(dataset)\n","  if method == 'ggg':\n","    X, y = median_center_scale(dataset)\n","    X0, y0 = mad_scale(dataset)\n","  cb = breakdown(X)\n","  obj, beta_l = LAD_LASSO_C(X, y, lbd)\n","  cbl = breakdown(X_lasso_C(X, lbd))\n","  cbsu = select_col_uncenter(X0, beta_l)\n","  if method == 'ddd' or method == 'fff':\n","    beta_l.insert(0,round(np.mean(y0),6))\n","  if method == 'eee' or method == 'ggg':\n","    beta_l.insert(0,round(np.median(y0),6))\n","  array.append([lbd, beta_l, obj, cb, cbl, cbsu])\n","  print(array)\n","  df = pd.DataFrame(array)\n","  filepath = '/content/drive/My Drive/Bernice Research/Dec 2/%s.xlsx' % dataset\n","  if Path(filepath).is_file():\n","    book = openpyxl.load_workbook(filepath)\n","    writer = pd.ExcelWriter(filepath, engine='openpyxl') \n","    writer.book = book\n","    writer.sheets = dict((ws.title, ws) for ws in book.worksheets)\n","    df.to_excel(writer, index=False, header=False, sheet_name = method)\n","    writer.save()\n","  else:\n","    df.to_excel(filepath, index=False, header=False, sheet_name = method)"],"metadata":{"id":"IE29fJs0TP6Q","executionInfo":{"status":"ok","timestamp":1671087324940,"user_tz":300,"elapsed":3,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["def LAD_MIP(X, M = 1000, eps = 0.1):\n","\n","  #run the optimization\n","  import gurobipy as gp\n","  from gurobipy import GRB\n","  from gurobipy import quicksum\n","\n","  n, p = X.shape\n","\n","  m = gp.Model()\n","  \n","  m.Params.LogToConsole = 0\n","\n","  m.setParam('MIPGap', 0)\n","  m.setParam('MIPGapAbs', 0)\n","  m.setParam('IntFeasTol', 1e-9)\n","\n","  u = m.addMVar((X.shape[0],), vtype=GRB.BINARY)\n","  l = m.addMVar((X.shape[0],), vtype=GRB.BINARY)\n","  pls = m.addMVar((X.shape[0],), vtype=GRB.CONTINUOUS)\n","  mns = m.addMVar((X.shape[0],), vtype=GRB.CONTINUOUS)\n","  s = m.addMVar((X.shape[0],), vtype=GRB.CONTINUOUS)\n","  t = m.addMVar((X.shape[0],), vtype=GRB.CONTINUOUS)\n","  xi = m.addMVar((X.shape[1],), lb=-float('inf'), vtype=GRB.CONTINUOUS)\n","\n","  m.update()\n","\n","  m.addConstr(X@xi + pls - mns + s - t == np.zeros(X.shape[0]))\n","      \n","  m.addConstr(s - M*u <= np.zeros(X.shape[0]))\n","  m.addConstr(t - M*l <= np.zeros(X.shape[0]))\n","  m.addConstr(pls + mns + M*u + M*l <= M*np.ones(X.shape[0]))\n","  m.addConstr(u + l <= np.ones(X.shape[0]))\n","  m.addConstr(quicksum(pls[i] for i in range(n)) + quicksum(mns[i] for i in range(n)) - quicksum(s[i] for i in range(n)) - quicksum(t[i] for i in range(n)) <= 0)\n","  m.addConstr(quicksum(s[i] for i in range(n)) + quicksum(t[i] for i in range(n)) >= eps)\n","              \n","  m.setObjective(quicksum(u[i] for i in range(n)) + quicksum(l[j] for j in range(n)), GRB.MINIMIZE)\n","  m.optimize()\n","  return m.objval\n"],"metadata":{"id":"3nP9uSu2EcZB","executionInfo":{"status":"ok","timestamp":1671087324940,"user_tz":300,"elapsed":3,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["dataset = 'aircraft'"],"metadata":{"id":"bwuhtHpxAXtu"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### MIP\n","we use the MIP approach to calculate the LAD breadown for selected columns for uncentered dataset."],"metadata":{"id":"JxxMPQOFQ7Q1"}},{"cell_type":"code","source":["X0, y = sd_scale('hbk')\n","print(X0.shape[0])\n","X= X0[:,0:1]\n","LAD_MIP(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"62pIOMgxIGM0","executionInfo":{"status":"ok","timestamp":1670378064365,"user_tz":300,"elapsed":1307,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"169aa43b-78bd-4bd7-ecae-90a4f369655a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-7-28b63f0ad177>:10: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["75\n"]},{"output_type":"execute_result","data":{"text/plain":["38.0"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["X0, y = sd_scale('aircraft')\n","print(X0.shape[0])\n","X= X0[:,0:1]\n","LAD_MIP(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xTaK-CCIQxSB","executionInfo":{"status":"ok","timestamp":1670378036830,"user_tz":300,"elapsed":578,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"1d38855a-a59b-4b12-d779-9ff7ee414df7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["23\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-7-28b63f0ad177>:10: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"execute_result","data":{"text/plain":["12.0"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["X0, y = read_data('wood')\n","print(X0.shape[0])\n","X= X0[:,0:1]\n","LAD_MIP(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-4GorRiYSZpR","executionInfo":{"status":"ok","timestamp":1670378010739,"user_tz":300,"elapsed":319,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"68b38748-8d5b-4e1b-886e-a3bcb91c8753"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["20\n"]},{"output_type":"execute_result","data":{"text/plain":["10.0"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["X0, y = sd_scale('coleman')\n","print(X0.shape[0])\n","X= X0[:,0:1]\n","LAD_MIP(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YbWzz78oS7e2","executionInfo":{"status":"ok","timestamp":1670381848493,"user_tz":300,"elapsed":1177,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"3ce129a0-6594-4809-c9bd-914feb0decc5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["20\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-7-28b63f0ad177>:10: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"execute_result","data":{"text/plain":["10.0"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["X0, y = mad_scale('coleman')\n","print(X0.shape[0])\n","X= X0[:,0:1]\n","LAD_MIP(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nVangL9cS-Z0","executionInfo":{"status":"ok","timestamp":1670381856233,"user_tz":300,"elapsed":264,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"b1fdaff7-33f9-46d5-8162-e4bdb30f6651"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["20\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-14-674ae01502c6>:11: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"execute_result","data":{"text/plain":["10.0"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["X0, y = read_data('salinity')\n","print(X0.shape[0])\n","X= X0[:,0:1]\n","LAD_MIP(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jqDNbxYph9xu","executionInfo":{"status":"ok","timestamp":1670382089601,"user_tz":300,"elapsed":1396,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"d850d5e2-d34b-4fdb-dd8d-d9932db13853"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["28\n"]},{"output_type":"execute_result","data":{"text/plain":["14.0"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["X0, y = sd_scale('salinity')\n","print(X0.shape[0])\n","X= X0[:,0:1]\n","LAD_MIP(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7qKwP1Zfh__p","executionInfo":{"status":"ok","timestamp":1670382099186,"user_tz":300,"elapsed":344,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"f534da7b-323e-49f0-cb31-f1796dfb411a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-7-28b63f0ad177>:10: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["28\n"]},{"output_type":"execute_result","data":{"text/plain":["14.0"]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["X0, y = mad_scale('salinity')\n","print(X0.shape[0])\n","X= X0[:,0:1]\n","LAD_MIP(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E60kA6cViCWa","executionInfo":{"status":"ok","timestamp":1670382106798,"user_tz":300,"elapsed":1018,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"5b864cd3-54cf-4f4e-cd81-1d97633d25d5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-14-674ae01502c6>:11: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["28\n"]},{"output_type":"execute_result","data":{"text/plain":["14.0"]},"metadata":{},"execution_count":57}]},{"cell_type":"markdown","source":["### trying for beta"],"metadata":{"id":"feSO-gjjjBgG"}},{"cell_type":"code","source":["# fff\n","i = 37\n","X, y = mean_center_scale('hbk')\n","obj, beta_l = LAD_LASSO_C(X, y, i)\n","print(beta_l)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MYzZ-zUfLbsr","executionInfo":{"status":"ok","timestamp":1670980215687,"user_tz":300,"elapsed":150,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"d6389c70-5fd9-4822-a586-4fcdbb6cf0d8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.0, 0.0, 0.8284]\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-7-e8b02119499b>:12: RuntimeWarning: invalid value encountered in double_scalars\n","  X[j,k] = (X[j,k]-c[k])/sd[k]\n"]}]},{"cell_type":"code","source":["# aaa\n","i = 110000\n","X, y = read_data('aircraft')\n","obj, beta_l = LAD_LASSO(X, y, i)\n","print(beta_l)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wdXTz-_d_tsz","executionInfo":{"status":"ok","timestamp":1670977968985,"user_tz":300,"elapsed":218,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"df791cc2-68bd-4851-d38a-438694e4fc7a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[6.38, 0.0, 0.0, 0.0, 0.00048]\n"]}]},{"cell_type":"code","source":["# d\n","i = 110000\n","X, y = mean_center(dataset)\n","obj, beta_l = LAD_LASSO_C(X, y, i)\n","print(beta_l)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qh7XGmCWEdQc","executionInfo":{"status":"ok","timestamp":1670978369919,"user_tz":300,"elapsed":129,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"9b45a0d8-e129-491c-e5e4-7325a4465ddf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.0, 0.0, 0.000976, 0.0]\n"]}]},{"cell_type":"code","source":["# aa\n","i = 0.15\n","X, y = read_data('wood')\n","obj, beta_l = LAD_LASSO(X, y, i)\n","print(beta_l)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EPAuCzTLiSda","executionInfo":{"status":"ok","timestamp":1670393325296,"user_tz":300,"elapsed":973,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"90a4db43-5475-49da-c44c-33f3191ec0a6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.376801, 0.14633, -0.092689, 0.0, 0.232721, -0.075042]\n"]}]},{"cell_type":"code","source":["# a\n","i = 100\n","X, y = read_data(dataset)\n","obj, beta_l = LAD_LASSO(X, y, i)\n","print(beta_l)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3CFAvlt0wuci","executionInfo":{"status":"ok","timestamp":1670100992225,"user_tz":300,"elapsed":986,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"e4c2a7de-e5c8-46b4-b405-3035c056babf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[29.793801, 0.0, 0.146177, 0.0, 0.0, 0.0]\n"]}]},{"cell_type":"code","source":["# b\n","i = 20\n","X, y = sd_scale(dataset)\n","obj, beta_l = LAD_LASSO(X, y, i)\n","print(beta_l)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LYsT_rvbyd2e","executionInfo":{"status":"ok","timestamp":1670101583908,"user_tz":300,"elapsed":119,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"29ded46f-0f4f-4f42-eb42-d023168bbbbc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[36.51, 0.0, 0.0, 0.0, 0.0, 0.0]\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-14-674ae01502c6>:11: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]}]},{"cell_type":"code","source":["# bb\n","i = 9.195\n","X, y = sd_scale('wood')\n","obj, beta_l = LAD_LASSO(X, y, i)\n","print(beta_l)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CZw8iye8_hmv","executionInfo":{"status":"ok","timestamp":1670394971076,"user_tz":300,"elapsed":287,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"37477930-ee0c-4a78-941d-f39b508899a9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.487578, 0.005491, -0.001948, 0.0, 0.0, 0.0]\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-7-28b63f0ad177>:10: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]}]},{"cell_type":"code","source":["# cc\n","i = 10.93\n","X, y = mad_scale('wood')\n","obj, beta_l = LAD_LASSO(X, y, i)\n","print(beta_l)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M-MshDa3Uv7V","executionInfo":{"status":"ok","timestamp":1670395513896,"user_tz":300,"elapsed":291,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"9672b087-67e5-4f6b-eec9-5f78acfec51a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.487578, 0.004575, -0.001657, 0.0, 0.0, 0.0]\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-14-674ae01502c6>:11: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]}]},{"cell_type":"code","source":["# c\n","i = 10\n","X, y = mad_scale(dataset)\n","obj, beta_l = LAD_LASSO(X, y, i)\n","print(beta_l)"],"metadata":{"id":"RuIQZ-_xAeZZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# d\n","i = 100\n","X, y = mean_center(dataset)\n","obj, beta_l = LAD_LASSO_C(X, y, i)\n","print(beta_l)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7FuJObqI1Hq8","executionInfo":{"status":"ok","timestamp":1670102388863,"user_tz":300,"elapsed":149,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"4f156394-6941-4d4a-f5c2-1af378849c29"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.0, 0.165462, 0.0, 0.0, 0.0]\n"]}]},{"cell_type":"code","source":["# e\n","i = 100\n","X, y = median_center(dataset)\n","obj, beta_l = LAD_LASSO(X, y, i)\n","print(beta_l)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9QE15Ok3j5ic","executionInfo":{"status":"ok","timestamp":1670047067822,"user_tz":300,"elapsed":3,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"39efaa2d-6755-446f-d6dc-4d83ed96fcaf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.376801, 0.14633, -0.092689, 0.0, 0.232721, -0.075042]\n"]}]},{"cell_type":"code","source":["# f\n","i = 20\n","X, y = mean_center_scale(dataset)\n","obj, beta_l = LAD_LASSO_C(X, y, i)\n","print(beta_l)"],"metadata":{"id":"1VaoiJr8A1FY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# g\n","i = 10\n","X, y = median_center_scale(dataset)\n","obj, beta_l = LAD_LASSO_C(X, y, i)\n","print(beta_l)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4AcQdLQPfHmr","executionInfo":{"status":"ok","timestamp":1669537334654,"user_tz":300,"elapsed":244,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"7246bb4d-e095-4ddc-b9d6-1eadad138a6c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.122807, 0.0, 0.0]\n"]}]},{"cell_type":"code","source":["# gg\n","i = 12.4\n","X, y = median_center_scale('wood')\n","obj, beta_l = LAD_LASSO_C(X, y, i)\n","print(beta_l)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k5uShHEQAdNW","executionInfo":{"status":"ok","timestamp":1671088317182,"user_tz":300,"elapsed":222,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"ee5719aa-0241-4a77-c375-219fd88a4ff8"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.0, 0.0, 0.0, 0.000555, 0.0]\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-12-aa6762306108>:12: RuntimeWarning: invalid value encountered in double_scalars\n","  X[j,k] = (X[j,k]-c[k])/sd[k]\n"]}]},{"cell_type":"markdown","source":["### hbk"],"metadata":{"id":"LqBLIi4SBQWc"}},{"cell_type":"code","source":["print_sheet('hbk', 'a', end=25, step=2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dL9z6WaA9JeO","executionInfo":{"status":"ok","timestamp":1670121705294,"user_tz":300,"elapsed":429933,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"8c3a983e-40b3-4fe4-fb61-5d1f9b2819f8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [-0.881474, 0.091312, 0.15476, 0.214647], 86.74287, 8, 8, 8], [2, [-0.863958, 0.098763, 0.146651, 0.208719], 87.652559, 8, 8, 8], [4, [-0.782778, 0.068111, 0.115761, 0.236318], 88.529062, 8, 8, 8], [6, [-0.674888, 0.0, 0.079763, 0.278187], 89.274691, 8, 8, 8], [8, [-0.674888, 0.0, 0.079763, 0.278187], 89.990591, 8, 8, 8], [10, [-0.602386, 0.0, 0.047122, 0.297644], 90.688905, 8, 8, 8], [12, [-0.602386, 0.0, 0.047122, 0.297644], 91.378437, 8, 8, 8], [14, [-0.597992, 0.0, 0.042903, 0.300319], 92.065221, 8, 8, 8], [16, [-0.597992, 0.0, 0.042903, 0.300319], 92.751666, 8, 8, 8], [18, [-0.597992, 0.0, 0.042903, 0.300319], 93.43811, 8, 8, 8], [20, [-0.597992, 0.0, 0.042903, 0.300319], 94.124555, 8, 8, 8], [22, [-0.597992, 0.0, 0.042903, 0.300319], 94.811, 8, 7, 8], [24, [-0.635878, 0.0, 0.016926, 0.318888], 95.489184, 8, 6, 8], [26, [-0.59322, 0.0, 0.0, 0.328814], 96.157288, 8, 5, 8], [28, [-0.59322, 0.0, 0.0, 0.328814], 96.814915, 8, 5, 8], [30, [-0.59322, 0.0, 0.0, 0.328814], 97.472542, 8, 4, 8], [32, [-0.55331, 0.0, 0.0, 0.327526], 98.129268, 8, 4, 8], [34, [-0.55331, 0.0, 0.0, 0.327526], 98.784321, 8, 4, 8], [36, [-0.55331, 0.0, 0.0, 0.327526], 99.439373, 8, 4, 8], [38, [-0.55331, 0.0, 0.0, 0.327526], 100.094425, 8, 3, 8], [40, [-0.55331, 0.0, 0.0, 0.327526], 100.749477, 8, 3, 8], [42, [-0.55331, 0.0, 0.0, 0.327526], 101.40453, 8, 3, 8], [44, [-0.55331, 0.0, 0.0, 0.327526], 102.059582, 8, 3, 8], [46, [-0.55331, 0.0, 0.0, 0.327526], 102.714634, 8, 3, 8], [48, [-0.55331, 0.0, 0.0, 0.327526], 103.369686, 8, 2, 8], [50, [-0.55331, 0.0, 0.0, 0.327526], 104.024739, 8, 2, 8]]\n"]}]},{"cell_type":"code","source":["print_sheet('hbk', 'b', end=22, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7X_MD1n09K30","executionInfo":{"status":"ok","timestamp":1670122344910,"user_tz":300,"elapsed":423908,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"2372ba7b-f513-4bf3-a400-91761c587556"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-7-28b63f0ad177>:10: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [-0.881474, 0.331297, 1.266558, 2.503166], 86.74287, 8, 8, 8], [1, [-0.829757, 0.354727, 1.075673, 2.543271], 90.731669, 8, 8, 8], [2, [-0.829757, 0.354727, 1.075673, 2.543271], 94.705339, 8, 8, 8], [3, [-0.829757, 0.354727, 1.075673, 2.543271], 98.67901, 8, 8, 8], [4, [-0.782778, 0.24712, 0.94739, 2.755883], 102.649874, 8, 8, 8], [5, [-0.596019, 0.0, 0.362187, 3.490983], 106.523393, 8, 8, 8], [6, [-0.574957, 0.027451, 0.285164, 3.403218], 110.28611, 8, 8, 8], [7, [-0.574957, 0.027451, 0.285164, 3.403218], 114.001943, 8, 8, 8], [8, [-0.574957, 0.027451, 0.285164, 3.403218], 117.717776, 8, 8, 8], [9, [-0.562021, 0.304367, 0.121881, 3.278293], 121.425613, 8, 8, 8], [10, [-0.562021, 0.304367, 0.121881, 3.278293], 125.130155, 8, 8, 8], [11, [-0.348295, 0.020615, 0.0, 2.451624], 128.388373, 8, 8, 8], [12, [-0.2, 0.351116, 0.0, 0.0], 129.80694, 8, 8, 10], [13, [-0.165979, 0.261829, 0.0, 0.0], 130.126454, 8, 8, 10], [14, [-0.165979, 0.261829, 0.0, 0.0], 130.388283, 8, 8, 10], [15, [-0.165979, 0.261829, 0.0, 0.0], 130.650111, 8, 8, 10], [16, [-0.108989, 0.244598, 0.0, 0.0], 130.904573, 8, 8, 10], [17, [-0.108989, 0.244598, 0.0, 0.0], 131.149171, 8, 8, 10], [18, [-0.108989, 0.244598, 0.0, 0.0], 131.393769, 8, 8, 10], [19, [-0.004762, 0.034554, 0.0, 0.0], 131.508912, 8, 8, 10], [20, [-0.004762, 0.034554, 0.0, 0.0], 131.543466, 8, 8, 10], [21, [-0.004762, 0.034554, 0.0, 0.0], 131.578021, 8, 7, 10], [22, [0.1, 0.0, 0.0, 0.0], 131.6, 8, 7, None]]\n"]}]},{"cell_type":"code","source":["print_sheet('hbk', 'c', end=25, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tzwx7Nlu-zXR","executionInfo":{"status":"ok","timestamp":1670122759641,"user_tz":300,"elapsed":414766,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"f277d215-e4bc-48b6-aa44-4f3d57982ded"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-14-674ae01502c6>:11: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [-0.881474, 0.216835, 0.694564, 1.34226], 86.74287, 8, 8, 8], [1, [-0.863958, 0.234529, 0.658168, 1.305191], 88.94218, 8, 8, 8], [2, [-0.829757, 0.23217, 0.589885, 1.363765], 91.129637, 8, 8, 8], [3, [-0.829757, 0.23217, 0.589885, 1.363765], 93.315457, 8, 8, 8], [4, [-0.782778, 0.161741, 0.519536, 1.477772], 95.484501, 8, 8, 8], [5, [-0.602386, 0.0, 0.211483, 1.861267], 97.604997, 8, 8, 8], [6, [-0.602386, 0.0, 0.211483, 1.861267], 99.677746, 8, 8, 8], [7, [-0.602386, 0.0, 0.211483, 1.861267], 101.750496, 8, 8, 8], [8, [-0.596019, 0.0, 0.198619, 1.871952], 103.822103, 8, 8, 8], [9, [-0.596019, 0.0, 0.198619, 1.871952], 105.892673, 8, 8, 8], [10, [-0.591489, 0.0, 0.190979, 1.862695], 107.960142, 8, 8, 8], [11, [-0.576239, 0.0, 0.165257, 1.83153], 109.967567, 8, 8, 8], [12, [-0.576239, 0.0, 0.165257, 1.83153], 111.964354, 8, 8, 8], [13, [-0.576239, 0.0, 0.165257, 1.83153], 113.96114, 8, 8, 8], [14, [-0.555305, 0.0, 0.122889, 1.867439], 115.957054, 8, 8, 8], [15, [-0.555305, 0.0, 0.122889, 1.867439], 117.947382, 8, 8, 8], [16, [-0.555305, 0.0, 0.122889, 1.867439], 119.937709, 8, 8, 8], [17, [-0.555305, 0.0, 0.122889, 1.867439], 121.928037, 8, 8, 8], [18, [-0.494586, 0.0, 0.0, 1.971592], 123.902038, 8, 8, 8], [19, [-0.494586, 0.0, 0.0, 1.971592], 125.873631, 8, 8, 8], [20, [-0.392308, 0.0, 0.0, 1.443077], 127.684615, 8, 8, 8], [21, [-0.341667, 0.0, 0.0, 1.302778], 129.054167, 8, 7, 8], [22, [-0.2, 0.0, 0.0, 0.625333], 129.987333, 8, 7, 8], [23, [-0.021212, 0.0, 0.0, 0.132646], 130.187535, 8, 7, 8], [24, [-0.021212, 0.0, 0.0, 0.132646], 130.320182, 8, 6, 8], [25, [-0.021212, 0.0, 0.0, 0.132646], 130.452828, 8, 6, 8]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('hbk', 'd', end=25, step=2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mVCSSBTv_Es9","executionInfo":{"status":"ok","timestamp":1670121848524,"user_tz":300,"elapsed":34687,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"6b302571-92d0-4dca-a2ee-28fd36cd33c2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [1.278667, 0.207831, 0.089571, 0.18873], 94.531621, 14, 14, 8], [2, [1.278667, 0.136078, 0.0, 0.27517], 95.356336, 14, 14, 8], [4, [1.278667, 0.090795, 0.0, 0.296342], 96.169717, 14, 15, 8], [6, [1.278667, 0.018066, 0.0, 0.295217], 96.85387, 14, 14, 8], [8, [1.278667, 0.018066, 0.0, 0.295217], 97.480435, 14, 13, 8], [10, [1.278667, 0.018066, 0.0, 0.295217], 98.107001, 14, 12, 8], [12, [1.278667, 0.0, 0.0, 0.294937], 98.706168, 14, 11, 8], [14, [1.278667, 0.0, 0.0, 0.294937], 99.296042, 14, 10, 8], [16, [1.278667, 0.0, 0.0, 0.294937], 99.885916, 14, 9, 8], [18, [1.278667, 0.0, 0.0, 0.294937], 100.47579, 14, 9, 8], [20, [1.278667, 0.0, 0.0, 0.294937], 101.065664, 14, 8, 8], [22, [1.278667, 0.0, 0.0, 0.294937], 101.655538, 14, 7, 8], [24, [1.278667, 0.0, 0.0, 0.294937], 102.245412, 14, 6, 8], [26, [1.278667, 0.0, 0.0, 0.294937], 102.835286, 14, 5, 8], [28, [1.278667, 0.0, 0.0, 0.294937], 103.42516, 14, 5, 8], [30, [1.278667, 0.0, 0.0, 0.294937], 104.015034, 14, 4, 8], [32, [1.278667, 0.0, 0.0, 0.278601], 104.591491, 14, 4, 8], [34, [1.278667, 0.0, 0.0, 0.278601], 105.148692, 14, 4, 8], [36, [1.278667, 0.0, 0.0, 0.278601], 105.705893, 14, 4, 8], [38, [1.278667, 0.0, 0.0, 0.278601], 106.263095, 14, 3, 8], [40, [1.278667, 0.0, 0.0, 0.268249], 106.816569, 14, 3, 8], [42, [1.278667, 0.0, 0.0, 0.268249], 107.353067, 14, 3, 8], [44, [1.278667, 0.0, 0.0, 0.268249], 107.889564, 14, 3, 8], [46, [1.278667, 0.0, 0.0, 0.268249], 108.426061, 14, 3, 8], [48, [1.278667, 0.0, 0.0, 0.268249], 108.962558, 14, 2, 8], [50, [1.278667, 0.0, 0.0, 0.268249], 109.499055, 14, 2, 8]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('hbk', 'e', end=25, step=2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B_P-cgrtAMLq","executionInfo":{"status":"ok","timestamp":1670121918787,"user_tz":300,"elapsed":53598,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"5e65898e-034e-4aea-ab25-fc67f449c579"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [0.1, 0.089701, 0.133835, 0.227864], 86.761898, 8, 8, 8], [2, [0.1, 0.093688, 0.129793, 0.224536], 87.65844, 8, 8, 8], [4, [0.1, 0.043378, 0.103528, 0.257953], 88.52996, 8, 8, 8], [6, [0.1, 0.0, 0.080882, 0.286765], 89.280882, 8, 8, 8], [8, [0.1, 0.0, 0.06781, 0.285312], 89.993808, 8, 8, 8], [10, [0.1, 0.0, 0.06781, 0.285312], 90.700051, 8, 8, 8], [12, [0.1, 0.0, 0.06781, 0.285312], 91.406295, 8, 8, 8], [14, [0.1, 0.0, 0.030357, 0.309287], 92.097013, 8, 8, 8], [16, [0.1, 0.0, 0.030357, 0.309287], 92.776302, 8, 8, 8], [18, [0.1, 0.0, 0.030357, 0.309287], 93.45559, 8, 8, 8], [20, [0.1, 0.0, 0.030357, 0.309287], 94.134878, 8, 8, 8], [22, [0.1, 0.0, 0.030357, 0.309287], 94.814167, 8, 7, 8], [24, [0.1, 0.0, 0.030357, 0.309287], 95.493455, 8, 6, 8], [26, [0.1, 0.0, 0.0, 0.32872], 96.157785, 8, 5, 8], [28, [0.1, 0.0, 0.0, 0.32872], 96.815225, 8, 5, 8], [30, [0.1, 0.0, 0.0, 0.32872], 97.472664, 8, 4, 8], [32, [0.1, 0.0, 0.0, 0.32872], 98.130104, 8, 4, 8], [34, [0.1, 0.0, 0.0, 0.32872], 98.787543, 8, 4, 8], [36, [0.1, 0.0, 0.0, 0.32872], 99.444983, 8, 4, 8], [38, [0.1, 0.0, 0.0, 0.32872], 100.102422, 8, 3, 8], [40, [0.1, 0.0, 0.0, 0.32872], 100.759862, 8, 3, 8], [42, [0.1, 0.0, 0.0, 0.32872], 101.417301, 8, 3, 8], [44, [0.1, 0.0, 0.0, 0.32872], 102.07474, 8, 3, 8], [46, [0.1, 0.0, 0.0, 0.32872], 102.73218, 8, 3, 8], [48, [0.1, 0.0, 0.0, 0.32872], 103.389619, 8, 3, 8], [50, [0.1, 0.0, 0.0, 0.32872], 104.047059, 8, 2, 8]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('hbk', 'f', end=22, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bDguxbgiANkN","executionInfo":{"status":"ok","timestamp":1670122857975,"user_tz":300,"elapsed":98243,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"60a4058e-66a3-4bdd-d643-091dd09bf473"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-5-e8b02119499b>:12: RuntimeWarning: invalid value encountered in double_scalars\n","  X[j,k] = (X[j,k]-c[k])/sd[k]\n","<ipython-input-7-28b63f0ad177>:10: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [1.278667, 0.75405, 0.733049, 2.200925], 94.531621, 14, 14, 8], [1, [1.278667, 0.75405, 0.733049, 2.200925], 98.219645, 14, 13, 8], [2, [1.278667, 0.530799, 0.35691, 2.370394], 101.604813, 14, 9, 8], [3, [1.278667, 0.530799, 0.35691, 2.370394], 104.862916, 14, 6, 8], [4, [1.278667, 0.535687, 0.34097, 2.376892], 108.118092, 14, 3, 8], [5, [1.278667, 0.578423, 0.201598, 2.433705], 111.367126, 14, 3, 8], [6, [1.278667, 0.185139, 0.047641, 2.695761], 114.440441, 14, 2, 8], [7, [1.278667, 0.201567, 0.0, 2.714359], 117.363233, 14, 2, 8], [8, [1.278667, 0.108072, 0.0, 2.688924], 120.218203, 14, 2, 8], [9, [1.278667, 0.108072, 0.0, 2.688924], 123.015199, 14, 2, 8], [10, [1.278667, 0.021738, 0.0, 2.672635], 125.720056, 14, 2, 8], [11, [1.278667, 0.092897, 0.0, 2.529067], 128.391761, 14, 2, 8], [12, [1.278667, 0.121412, 0.0, 2.471537], 131.011881, 14, 2, 8], [13, [1.278667, 0.121412, 0.0, 2.471537], 133.60483, 14, 2, 8], [14, [1.278667, 0.042113, 0.0, 2.39093], 136.111843, 14, 2, 8], [15, [1.278667, 0.042113, 0.0, 2.39093], 138.544886, 14, 2, 8], [16, [1.278667, 0.036329, 0.0, 2.391248], 140.974721, 14, 2, 8], [17, [1.278667, 0.243916, 0.0, 2.020247], 143.29466, 14, 2, 8], [18, [1.278667, 0.243916, 0.0, 2.020247], 145.558823, 14, 2, 8], [19, [1.278667, 0.207978, 0.0, 2.022696], 147.799047, 14, 2, 8], [20, [1.278667, 0.064117, 0.0, 2.032501], 149.985084, 14, 2, 8], [21, [1.278667, 0.064117, 0.0, 2.032501], 152.081701, 14, 2, 8], [22, [1.278667, 0.170994, 0.0, 1.719312], 154.059519, 14, 2, 8]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('hbk', 'g', end=25, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pnU8VavHAPmq","executionInfo":{"status":"ok","timestamp":1670122934351,"user_tz":300,"elapsed":76394,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"d7be975d-9fb2-4c59-abc7-223245c598b4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-12-aa6762306108>:12: RuntimeWarning: invalid value encountered in double_scalars\n","  X[j,k] = (X[j,k]-c[k])/sd[k]\n","<ipython-input-14-674ae01502c6>:11: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [0.1, 0.213011, 0.600651, 1.42491], 86.761898, 8, 8, 8], [1, [0.1, 0.231329, 0.565554, 1.384637], 88.970351, 8, 8, 8], [2, [0.1, 0.231329, 0.565554, 1.384637], 91.151871, 8, 8, 8], [3, [0.1, 0.231329, 0.565554, 1.384637], 93.333391, 8, 8, 8], [4, [0.1, 0.119744, 0.439548, 1.57735], 95.496899, 8, 8, 8], [5, [0.1, 0.0, 0.30433, 1.784152], 97.611242, 8, 7, 8], [6, [0.1, 0.0, 0.30433, 1.784152], 99.699724, 8, 5, 8], [7, [0.1, 0.0, 0.30433, 1.784152], 101.788205, 8, 4, 8], [8, [0.1, 0.0, 0.30433, 1.784152], 103.876687, 8, 3, 8], [9, [0.1, 0.0, 0.30433, 1.784152], 105.965169, 8, 3, 8], [10, [0.1, 0.0, 0.124092, 1.873118], 108.029247, 8, 2, 8], [11, [0.1, 0.0, 0.124092, 1.873118], 110.026458, 8, 2, 8], [12, [0.1, 0.0, 0.124092, 1.873118], 112.023668, 8, 2, 8], [13, [0.1, 0.0, 0.124092, 1.873118], 114.020879, 8, 2, 8], [14, [0.1, 0.0, 0.124092, 1.873118], 116.018089, 8, 2, 8], [15, [0.1, 0.0, 0.124092, 1.873118], 118.0153, 8, 2, 8], [16, [0.1, 0.0, 0.124092, 1.873118], 120.01251, 8, 2, 8], [17, [0.1, 0.0, 0.124092, 1.873118], 122.00972, 8, 2, 8], [18, [0.1, 0.0, 0.124092, 1.873118], 124.006931, 8, 2, 8], [19, [0.1, 0.0, 0.124092, 1.873118], 126.004141, 8, 2, 8], [20, [0.1, 0.0, 0.0, 1.471373], 127.686275, 8, 2, 8], [21, [0.1, 0.0, 0.0, 1.316491], 129.056842, 8, 2, 8], [22, [0.1, 0.0, 0.0, 0.568485], 130.070303, 8, 2, 8], [23, [0.1, 0.0, 0.0, 0.117618], 130.445643, 8, 2, 8], [24, [0.1, 0.0, 0.0, 0.117618], 130.56326, 8, 2, 8], [25, [0.1, 0.0, 0.0, 0.117618], 130.680878, 8, 2, 8]]\n"]}]},{"cell_type":"code","source":["print_single_center('hbk', 'fff', lbd = 38)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k4IRWbzJLwBs","executionInfo":{"status":"ok","timestamp":1670980303785,"user_tz":300,"elapsed":5087,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"fed06f5d-3808-4b53-a530-9feedc60de9d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-7-e8b02119499b>:12: RuntimeWarning: invalid value encountered in double_scalars\n","  X[j,k] = (X[j,k]-c[k])/sd[k]\n","<ipython-input-9-28b63f0ad177>:10: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [38, [1.278667, 0.0, 0.0, 0.628095], 174.232108, 14, 2, 8]]\n"]}]},{"cell_type":"markdown","source":["### coleman"],"metadata":{"id":"PmpL_nbfujMh"}},{"cell_type":"code","source":["print_sheet('coleman', 'a', end=20, step=5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"594KYk-Exmrv","executionInfo":{"status":"ok","timestamp":1670101294997,"user_tz":300,"elapsed":274887,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"7442411c-3131-4cb7-deba-77dd3b7c9d4f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [29.162123, -1.734273, 0.059047, 0.674808, 1.124239, -3.550548], 19.791317, 3, 3, 3], [5, [20.392463, 0.0, 0.03161, 0.517071, 0.472831, 0.0], 32.953467, 3, 1, 3], [10, [32.480862, 0.0, 0.020808, 0.545611, 0.0, 0.0], 36.726003, 3, 1, 3], [15, [32.480862, 0.0, 0.020808, 0.545611, 0.0, 0.0], 39.558101, 3, 1, 3], [20, [32.480862, 0.0, 0.020808, 0.545611, 0.0, 0.0], 42.3902, 3, 1, 3], [25, [32.720403, 0.0, 0.026699, 0.488721, 0.0, 0.0], 45.098506, 3, 1, 3], [30, [32.720403, 0.0, 0.026699, 0.488721, 0.0, 0.0], 47.675606, 3, 1, 3], [35, [32.720403, 0.0, 0.026699, 0.488721, 0.0, 0.0], 50.252706, 3, 1, 3], [40, [32.206323, 0.0, 0.041416, 0.440552, 0.0, 0.0], 52.782605, 3, 1, 3], [45, [32.321993, 0.0, 0.046462, 0.401175, 0.0, 0.0], 55.103593, 3, 1, 3], [50, [32.3453, 0.0, 0.045503, 0.399163, 0.0, 0.0], 57.337443, 3, 1, 3], [55, [32.3453, 0.0, 0.045503, 0.399163, 0.0, 0.0], 59.560773, 3, 1, 3], [60, [32.708161, 0.0, 0.063307, 0.269716, 0.0, 0.0], 61.450513, 3, 1, 3], [65, [32.872482, 0.0, 0.070475, 0.213778, 0.0, 0.0], 63.046707, 3, 1, 3], [70, [32.872482, 0.0, 0.070475, 0.213778, 0.0, 0.0], 64.467974, 3, 1, 3], [75, [32.872482, 0.0, 0.070475, 0.213778, 0.0, 0.0], 65.889241, 3, 1, 3], [80, [32.872482, 0.0, 0.070475, 0.213778, 0.0, 0.0], 67.310507, 3, 1, 3], [85, [32.872482, 0.0, 0.070475, 0.213778, 0.0, 0.0], 68.731774, 3, 1, 3], [90, [30.175218, 0.0, 0.131134, 0.060523, 0.0, 0.0], 69.742146, 3, 1, 3], [95, [30.175218, 0.0, 0.131134, 0.060523, 0.0, 0.0], 70.700432, 3, 1, 3], [100, [29.793801, 0.0, 0.146177, 0.0, 0.0, 0.0], 71.434118, 3, 1, 5]]\n"]}]},{"cell_type":"code","source":["print_sheet('coleman', 'b', end=15, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kXNtLCGmzuug","executionInfo":{"status":"ok","timestamp":1670101811892,"user_tz":300,"elapsed":210248,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"2e06d966-6690-49d5-e18b-a00a1a87edb6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-7-28b63f0ad177>:10: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [29.162123, -0.767585, 1.490501, 6.330817, 1.439631, -2.264362], 19.791317, 3, 3, 3], [1, [20.569978, -0.557528, 1.568229, 5.415189, 1.348719, -1.308592], 31.066802, 3, 3, 3], [2, [8.411562, -0.57269, 0.910211, 4.462236, 1.400342, 0.0], 39.145099, 3, 3, 3], [3, [9.916541, -0.153956, 0.805176, 4.690323, 1.197197, 0.0], 46.080029, 3, 2, 3], [4, [19.473597, 0.0, 0.711764, 4.837223, 0.656401, 0.0], 52.649963, 3, 1, 3], [5, [33.103245, 0.0, 0.394182, 4.883016, 0.0, 0.0], 58.409981, 3, 1, 3], [6, [33.32051, 0.0, 0.192244, 4.520947, 0.0, 0.0], 63.423512, 3, 1, 3], [7, [33.32051, 0.0, 0.192244, 4.520947, 0.0, 0.0], 68.136703, 3, 1, 3], [8, [33.32051, 0.0, 0.192244, 4.520947, 0.0, 0.0], 72.849894, 3, 1, 3], [9, [34.908186, 0.0, 0.0, 2.738682, 0.0, 0.0], 76.664213, 3, 1, 4], [10, [34.908186, 0.0, 0.0, 2.738682, 0.0, 0.0], 79.402895, 3, 1, 4], [11, [34.908186, 0.0, 0.0, 2.738682, 0.0, 0.0], 82.141577, 3, 1, 4], [12, [34.908186, 0.0, 0.0, 2.738682, 0.0, 0.0], 84.880259, 3, 1, 4], [13, [35.094281, 0.0, 0.0, 1.078068, 0.0, 0.0], 86.643351, 3, 1, 4], [14, [35.094281, 0.0, 0.0, 1.078068, 0.0, 0.0], 87.72142, 3, 1, 4], [15, [36.51, 0.0, 0.0, 0.0, 0.0, 0.0], 88.63, 3, 1, None]]\n"]}]},{"cell_type":"code","source":["print_sheet('coleman', 'c', end=19, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wA9dnK_Zz-ns","executionInfo":{"status":"ok","timestamp":1670102080776,"user_tz":300,"elapsed":268910,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"8e684c08-71c5-4c0f-c590-64f51e342d43"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-14-674ae01502c6>:11: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [29.162123, -0.597457, 1.290109, 5.117404, 0.993827, -1.881791], 19.791317, 3, 3, 3], [1, [20.569978, -0.433957, 1.357387, 4.377271, 0.931067, -1.087501], 29.05573, 3, 3, 3], [2, [8.411562, -0.445759, 0.787837, 3.606969, 0.966705, 0.0], 36.068679, 3, 3, 3], [3, [8.961561, -0.151797, 0.505247, 3.929633, 0.884905, 0.0], 41.778177, 3, 2, 3], [4, [8.961561, -0.151797, 0.505247, 3.929633, 0.884905, 0.0], 47.249759, 3, 1, 3], [5, [10.651297, 0.0, 0.374178, 4.013796, 0.786628, 0.0], 52.506721, 3, 1, 3], [6, [25.994816, 0.0, 0.148251, 4.308301, 0.254745, 0.0], 57.527521, 3, 1, 3], [7, [30.490552, 0.0, 0.0, 3.787756, 0.105838, 0.0], 61.850164, 3, 1, 4], [8, [33.32051, 0.0, 0.166398, 3.654427, 0.0, 0.0], 65.710965, 3, 1, 3], [9, [33.57874, 0.0, 0.0, 3.781798, 0.0, 0.0], 69.49626, 3, 1, 4], [10, [33.57874, 0.0, 0.0, 3.781798, 0.0, 0.0], 73.278058, 3, 1, 4], [11, [34.908186, 0.0, 0.0, 2.213765, 0.0, 0.0], 76.36749, 3, 1, 4], [12, [34.908186, 0.0, 0.0, 2.213765, 0.0, 0.0], 78.581255, 3, 1, 4], [13, [34.908186, 0.0, 0.0, 2.213765, 0.0, 0.0], 80.79502, 3, 1, 4], [14, [34.908186, 0.0, 0.0, 2.213765, 0.0, 0.0], 83.008784, 3, 1, 4], [15, [34.908186, 0.0, 0.0, 2.213765, 0.0, 0.0], 85.222549, 3, 1, 4], [16, [35.094281, 0.0, 0.0, 0.871437, 0.0, 0.0], 86.571461, 3, 1, 4], [17, [35.094281, 0.0, 0.0, 0.871437, 0.0, 0.0], 87.442899, 3, 1, 4], [18, [35.094281, 0.0, 0.0, 0.871437, 0.0, 0.0], 88.314336, 3, 1, 4], [19, [36.51, 0.0, 0.0, 0.0, 0.0, 0.0], 88.63, 3, 1, None]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('coleman', 'd', end=20, step=5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TsajUQeI2DjO","executionInfo":{"status":"ok","timestamp":1670117032918,"user_tz":300,"elapsed":63951,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"3271e2c3-501c-49ec-d9fd-7f3670607e04"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [35.0825, -1.770755, 0.061515, 0.645106, 1.171428, -3.089296], 20.064729, 3, 3, 3], [5, [35.0825, 0.0, 0.02852, 0.515981, 0.473134, 0.0], 33.157866, 3, 1, 3], [10, [35.0825, 0.0, 0.017555, 0.552658, 0.0, 0.0], 36.74878, 3, 1, 3], [15, [35.0825, 0.0, 0.017555, 0.552658, 0.0, 0.0], 39.599846, 3, 1, 3], [20, [35.0825, 0.0, 0.021434, 0.538363, 0.0, 0.0], 42.400378, 3, 1, 3], [25, [35.0825, 0.0, 0.021434, 0.538363, 0.0, 0.0], 45.199363, 3, 1, 3], [30, [35.0825, 0.0, 0.021053, 0.537233, 0.0, 0.0], 47.997606, 3, 1, 3], [35, [35.0825, 0.0, 0.021053, 0.537233, 0.0, 0.0], 50.789038, 3, 1, 3], [40, [35.0825, 0.0, 0.036291, 0.480546, 0.0, 0.0], 53.381987, 3, 1, 3], [45, [35.0825, 0.0, 0.036291, 0.480546, 0.0, 0.0], 55.966173, 3, 1, 3], [50, [35.0825, 0.0, 0.036291, 0.480546, 0.0, 0.0], 58.550358, 3, 1, 3], [55, [35.0825, 0.0, 0.033265, 0.431142, 0.0, 0.0], 61.060116, 3, 1, 3], [60, [35.0825, 0.0, 0.033265, 0.431142, 0.0, 0.0], 63.382152, 3, 1, 3], [65, [35.0825, 0.0, 0.033265, 0.431142, 0.0, 0.0], 65.704187, 3, 1, 3], [70, [35.0825, 0.0, 0.073137, 0.34347, 0.0, 0.0], 67.807627, 3, 1, 3], [75, [35.0825, 0.0, 0.088224, 0.287344, 0.0, 0.0], 69.754837, 3, 1, 3], [80, [35.0825, 0.0, 0.165462, 0.0, 0.0, 0.0], 70.835081, 3, 1, 5], [85, [35.0825, 0.0, 0.165462, 0.0, 0.0, 0.0], 71.66239, 3, 1, 5], [90, [35.0825, 0.0, 0.165462, 0.0, 0.0, 0.0], 72.489698, 3, 1, 5], [95, [35.0825, 0.0, 0.165462, 0.0, 0.0, 0.0], 73.317007, 3, 1, 5], [100, [35.0825, 0.0, 0.165462, 0.0, 0.0, 0.0], 74.144315, 3, 1, 5]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('coleman', 'e', end=20, step=5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"agPSjCZu2GYf","executionInfo":{"status":"ok","timestamp":1670102357376,"user_tz":300,"elapsed":53762,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"8fb851e5-193b-4d43-84c1-e2ab5596e184"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [35.855, -1.293027, 0.06765, 0.646874, 1.03726, -3.325691], 20.22855, 3, 3, 3], [5, [35.855, 0.0, 0.038245, 0.501433, 0.537513, 0.0], 33.382318, 3, 1, 3], [10, [35.855, 0.0, 0.03073, 0.520664, 0.126513, 0.0], 37.182433, 3, 1, 3], [15, [35.855, 0.0, 0.030061, 0.52557, 0.0, 0.0], 40.035062, 3, 1, 3], [20, [35.855, 0.0, 0.030061, 0.52557, 0.0, 0.0], 42.813213, 3, 1, 3], [25, [35.855, 0.0, 0.038651, 0.462615, 0.0, 0.0], 45.57347, 3, 1, 3], [30, [35.855, 0.0, 0.039168, 0.458826, 0.0, 0.0], 48.074042, 3, 1, 3], [35, [35.855, 0.0, 0.042278, 0.436032, 0.0, 0.0], 50.477595, 3, 1, 3], [40, [35.855, 0.0, 0.042278, 0.436032, 0.0, 0.0], 52.869144, 3, 1, 3], [45, [35.855, 0.0, 0.042278, 0.436032, 0.0, 0.0], 55.260693, 3, 1, 3], [50, [35.855, 0.0, 0.04955, 0.382734, 0.0, 0.0], 57.460678, 3, 1, 3], [55, [35.855, 0.0, 0.04955, 0.382734, 0.0, 0.0], 59.622101, 3, 1, 3], [60, [35.855, 0.0, 0.057869, 0.321765, 0.0, 0.0], 61.624845, 3, 1, 3], [65, [35.855, 0.0, 0.065985, 0.289808, 0.0, 0.0], 63.408366, 3, 1, 3], [70, [35.855, 0.0, 0.083116, 0.181842, 0.0, 0.0], 64.768261, 3, 1, 3], [75, [35.855, 0.0, 0.083116, 0.181842, 0.0, 0.0], 66.09305, 3, 1, 3], [80, [35.855, 0.0, 0.083116, 0.181842, 0.0, 0.0], 67.417839, 3, 1, 3], [85, [35.855, 0.0, 0.083116, 0.181842, 0.0, 0.0], 68.742628, 3, 1, 3], [90, [35.855, 0.0, 0.083116, 0.181842, 0.0, 0.0], 70.067416, 3, 1, 3], [95, [35.855, 0.0, 0.083116, 0.181842, 0.0, 0.0], 71.392205, 3, 1, 3], [100, [35.855, 0.0, 0.111968, 0.0, 0.0, 0.0], 72.598614, 3, 1, 5]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('coleman', 'f', end=15, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g7TtWzV_uqDk","executionInfo":{"status":"ok","timestamp":1670117128427,"user_tz":300,"elapsed":49530,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"2da46f3e-f5c8-4ed4-bae7-7dbb7abc29b3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-5-e8b02119499b>:12: RuntimeWarning: invalid value encountered in double_scalars\n","  X[j,k] = (X[j,k]-c[k])/sd[k]\n","<ipython-input-7-28b63f0ad177>:10: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [35.0825, -0.783732, 1.552811, 6.052171, 1.500058, -1.970198], 20.064729, 3, 3, 3], [1, [35.0825, -0.560809, 1.545353, 5.332975, 1.359634, -1.20738], 31.097599, 3, 4, 3], [2, [35.0825, -0.479904, 0.92127, 4.6218, 1.303106, 0.0], 39.494426, 3, 3, 3], [3, [35.0825, 0.0, 0.693454, 4.834299, 0.667221, 0.0], 46.483398, 3, 3, 3], [4, [35.0825, 0.0, 0.693454, 4.834299, 0.667221, 0.0], 52.678373, 3, 2, 3], [5, [35.0825, 0.0, 0.284694, 4.450696, 0.114924, 0.0], 58.748496, 3, 2, 3], [6, [35.0825, 0.0, 0.036805, 4.700968, 0.0, 0.0], 63.548154, 3, 2, 3], [7, [35.0825, 0.0, 0.036805, 4.700968, 0.0, 0.0], 68.285928, 3, 2, 3], [8, [35.0825, 0.0, 0.042162, 4.500987, 0.0, 0.0], 72.956277, 3, 2, 3], [9, [35.0825, 0.0, 0.0, 4.454527, 0.0, 0.0], 77.462536, 3, 2, 4], [10, [35.0825, 0.0, 0.0, 2.245743, 0.0, 0.0], 80.592117, 3, 2, 4], [11, [35.0825, 0.0, 0.0, 2.245743, 0.0, 0.0], 82.83786, 3, 2, 4], [12, [35.0825, 0.0, 0.0, 2.245743, 0.0, 0.0], 85.083603, 3, 2, 4], [13, [35.0825, 0.0, 0.0, 1.458938, 0.0, 0.0], 86.867108, 3, 2, 4], [14, [35.0825, 0.0, 0.0, 1.458938, 0.0, 0.0], 88.326046, 3, 2, 4], [15, [35.0825, 0.0, 0.0, 0.0, 0.0, 0.0], 88.865, 3, 1, None]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('coleman', 'g', end=19, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"unHp_2okusri","executionInfo":{"status":"ok","timestamp":1670117250590,"user_tz":300,"elapsed":60951,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"f03cbf87-3299-4678-ab96-4ba9c0cae650"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-12-aa6762306108>:12: RuntimeWarning: invalid value encountered in double_scalars\n","  X[j,k] = (X[j,k]-c[k])/sd[k]\n","<ipython-input-14-674ae01502c6>:11: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [35.855, -0.445448, 1.478094, 4.905567, 0.916938, -1.762616], 20.22855, 3, 3, 3], [1, [35.855, -0.406478, 1.3817, 4.306997, 0.915972, -1.020958], 29.154968, 3, 4, 3], [2, [35.855, -0.366691, 0.94387, 3.628906, 0.907784, -0.096876], 36.277986, 3, 4, 3], [3, [35.855, -0.361685, 0.88292, 3.562124, 0.904124, 0.0], 42.043191, 3, 3, 3], [4, [35.855, -0.361685, 0.88292, 3.562124, 0.904124, 0.0], 47.754043, 3, 2, 3], [5, [35.855, 0.0, 0.371136, 3.873553, 0.568582, 0.0], 52.977599, 3, 2, 3], [6, [35.855, 0.0, 0.371136, 3.873553, 0.568582, 0.0], 57.79087, 3, 2, 3], [7, [35.855, 0.0, 0.382823, 3.500841, 0.214576, 0.0], 62.171201, 3, 2, 3], [8, [35.855, 0.0, 0.382823, 3.500841, 0.214576, 0.0], 66.269441, 3, 2, 3], [9, [35.855, 0.0, 0.382823, 3.500841, 0.214576, 0.0], 70.367681, 3, 2, 3], [10, [35.855, 0.0, 0.0, 3.303903, 0.221897, 0.0], 74.082108, 3, 2, 4], [11, [35.855, 0.0, 0.0, 1.870633, 0.404208, 0.0], 77.598699, 3, 2, 4], [12, [35.855, 0.0, 0.0, 1.914886, 0.0, 0.0], 79.584206, 3, 2, 4], [13, [35.855, 0.0, 0.0, 1.914886, 0.0, 0.0], 81.499092, 3, 2, 4], [14, [35.855, 0.0, 0.0, 1.914886, 0.0, 0.0], 83.413977, 3, 2, 4], [15, [35.855, 0.0, 0.0, 1.914886, 0.0, 0.0], 85.328863, 3, 2, 4], [16, [35.855, 0.0, 0.0, 1.092892, 0.0, 0.0], 86.714143, 3, 2, 4], [17, [35.855, 0.0, 0.0, 0.724609, 0.0, 0.0], 87.642914, 3, 2, 4], [18, [35.855, 0.0, 0.0, 0.724609, 0.0, 0.0], 88.367522, 3, 2, 4], [19, [35.855, 0.0, 0.0, 0.0, 0.0, 0.0], 88.63, 3, 2, None]]\n"]}]},{"cell_type":"code","source":["print_sheet('coleman', 'aa', end=10, step=0.1, start=2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eUuCyllJF7H5","executionInfo":{"status":"ok","timestamp":1670392023145,"user_tz":300,"elapsed":144669,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"a18db3be-7069-4d2c-cdc4-c71931f2d12b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [2.0, [13.806731, -0.19624, 0.042327, 0.536013, 0.91075, -0.682003], 29.005213, 3, 3, 3], [2.1, [13.167607, 0.0, 0.037637, 0.536519, 0.884573, -0.525154], 29.232486, 3, 2, 3], [2.2, [13.167607, 0.0, 0.037637, 0.536519, 0.884573, -0.525154], 29.430874, 3, 2, 3], [2.3, [10.301185, 0.0, 0.028449, 0.513193, 0.887151, 0.0], 29.584603, 3, 2, 3], [2.4, [10.301185, 0.0, 0.028449, 0.513193, 0.887151, 0.0], 29.727482, 3, 2, 3], [2.5, [10.301185, 0.0, 0.028449, 0.513193, 0.887151, 0.0], 29.870362, 3, 2, 3], [2.6, [10.301185, 0.0, 0.028449, 0.513193, 0.887151, 0.0], 30.013241, 3, 2, 3], [2.7, [10.301185, 0.0, 0.028449, 0.513193, 0.887151, 0.0], 30.15612, 3, 2, 3], [2.8, [10.301185, 0.0, 0.028449, 0.513193, 0.887151, 0.0], 30.298999, 3, 2, 3], [2.9, [10.301185, 0.0, 0.028449, 0.513193, 0.887151, 0.0], 30.441879, 3, 2, 3], [3.0, [10.301185, 0.0, 0.028449, 0.513193, 0.887151, 0.0], 30.584758, 3, 2, 3]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('coleman', 'dd', end=10, step=0.1, start=2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AunkuZn3GD3g","executionInfo":{"status":"ok","timestamp":1670392351504,"user_tz":300,"elapsed":39595,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"a87e92fa-f655-41c2-d462-684dccfe8bbc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [2.0, [35.0825, -0.172807, 0.038621, 0.568414, 0.880484, -0.709039], 29.067219, 3, 3, 3], [2.1, [35.0825, -0.172807, 0.038621, 0.568414, 0.880484, -0.709039], 29.304155, 3, 3, 3], [2.2, [35.0825, 0.0, 0.032388, 0.571305, 0.852613, -0.494252], 29.513911, 3, 3, 3], [2.3, [35.0825, 0.0, 0.022997, 0.555065, 0.849965, 0.0], 29.679946, 3, 3, 3], [2.4, [35.0825, 0.0, 0.022997, 0.555065, 0.849965, 0.0], 29.822749, 3, 3, 3], [2.5, [35.0825, 0.0, 0.022997, 0.555065, 0.849965, 0.0], 29.965551, 3, 2, 3], [2.6, [35.0825, 0.0, 0.022997, 0.555065, 0.849965, 0.0], 30.108354, 3, 2, 3], [2.7, [35.0825, 0.0, 0.022997, 0.555065, 0.849965, 0.0], 30.251157, 3, 2, 3], [2.8, [35.0825, 0.0, 0.022997, 0.555065, 0.849965, 0.0], 30.393959, 3, 2, 3], [2.9, [35.0825, 0.0, 0.022997, 0.555065, 0.849965, 0.0], 30.536762, 3, 2, 3], [3.0, [35.0825, 0.0, 0.022997, 0.555065, 0.849965, 0.0], 30.679564, 3, 2, 3]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('coleman', 'ee', end=10, step=0.1, start=2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sxbwkM4MGHmg","executionInfo":{"status":"ok","timestamp":1670392392776,"user_tz":300,"elapsed":41297,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"efa8d2a4-bb5a-484a-9621-9018ba44b7fb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [2.0, [35.855, -0.213219, 0.052151, 0.54444, 0.866574, -1.110281], 29.325564, 3, 3, 3], [2.1, [35.855, -0.213219, 0.052151, 0.54444, 0.866574, -1.110281], 29.60423, 3, 3, 3], [2.2, [35.855, -0.301218, 0.043448, 0.544415, 0.877934, -0.61714], 29.879478, 3, 3, 3], [2.3, [35.855, -0.301218, 0.043448, 0.544415, 0.877934, -0.61714], 30.117893, 3, 2, 3], [2.4, [35.855, -0.156437, 0.030428, 0.536991, 0.836597, 0.0], 30.315104, 3, 2, 3], [2.5, [35.855, -0.156437, 0.030428, 0.536991, 0.836597, 0.0], 30.471149, 3, 2, 3], [2.6, [35.855, 0.0, 0.031175, 0.533887, 0.811307, 0.0], 30.60991, 3, 2, 3], [2.7, [35.855, 0.0, 0.031175, 0.533887, 0.811307, 0.0], 30.747547, 3, 2, 3], [2.8, [35.855, 0.0, 0.031175, 0.533887, 0.811307, 0.0], 30.885183, 3, 2, 3], [2.9, [35.855, 0.0, 0.031175, 0.533887, 0.811307, 0.0], 31.02282, 3, 2, 3], [3.0, [35.855, 0.0, 0.031175, 0.533887, 0.811307, 0.0], 31.160457, 3, 2, 3]]\n"]}]},{"cell_type":"markdown","source":["### salinity\n"],"metadata":{"id":"jNGGavjAomIz"}},{"cell_type":"code","source":["print_sheet('salinity', 'a', end=20, step=3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W5tO2y4DCrlj","executionInfo":{"status":"ok","timestamp":1669535047580,"user_tz":300,"elapsed":23925,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"e5ac1369-c99e-411b-8d79-24d810de2451"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [14.212097, 0.739684, -0.111747, -0.457656], 24.416163, 4, 4, 4], [3, [12.887341, 0.721444, -0.018468, -0.404982], 28.073166, 4, 4, 4], [6, [12.955865, 0.720236, 0.0, -0.408271], 31.486949, 4, 5, 4], [9, [12.955865, 0.720236, 0.0, -0.408271], 34.872471, 4, 4, 4], [12, [12.929997, 0.71308, 0.0, -0.405993], 38.24543, 4, 4, 4], [15, [12.929997, 0.71308, 0.0, -0.405993], 41.602652, 4, 4, 4], [18, [11.094048, 0.741692, 0.0, -0.337113], 44.901918, 4, 3, 4], [21, [11.094048, 0.741692, 0.0, -0.337113], 48.138332, 4, 3, 4], [24, [7.805414, 0.729168, 0.0, -0.202704], 51.084108, 4, 2, 4], [27, [4.801362, 0.635543, 0.0, -0.027241], 53.402418, 4, 2, 4], [30, [4.801362, 0.635543, 0.0, -0.027241], 55.390768, 4, 2, 4], [33, [4.76056, 0.618195, 0.0, -0.020626], 57.331264, 4, 2, 4], [36, [4.76056, 0.618195, 0.0, -0.020626], 59.247727, 4, 2, 4], [39, [4.76056, 0.618195, 0.0, -0.020626], 61.16419, 4, 2, 4], [42, [5.638474, 0.555051, 0.0, -0.027241], 63.060168, 4, 2, 4], [45, [5.022222, 0.555556, 0.0, 0.0], 64.733333, 4, 1, 6], [48, [5.792593, 0.481481, 0.0, 0.0], 66.333333, 4, 1, 6], [51, [5.792593, 0.481481, 0.0, 0.0], 67.777778, 4, 1, 6], [54, [8.451613, 0.225806, 0.0, 0.0], 68.83871, 4, 1, 6], [57, [8.451613, 0.225806, 0.0, 0.0], 69.516129, 4, 1, 6], [60, [10.8, 0.0, 0.0, 0.0], 69.9, 4, 1, None]]\n"]}]},{"cell_type":"code","source":["print_sheet('salinity', 'b', end=20, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wospdLuNDo8B","executionInfo":{"status":"ok","timestamp":1669535312765,"user_tz":300,"elapsed":30404,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"f6e09177-bac3-455e-d9ea-388cf8d719c3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:10: RuntimeWarning: divide by zero encountered in double_scalars\n","  # Remove the CWD from sys.path while we load stuff.\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [14.212097, 2.250534, -0.196977, -1.260346], 24.416163, 4, 4, 4], [1, [12.887341, 2.195037, -0.032553, -1.115285], 27.981362, 4, 4, 4], [2, [12.887341, 2.195037, -0.032553, -1.115285], 31.324238, 4, 4, 4], [3, [12.955865, 2.191363, 0.0, -1.124344], 34.663027, 4, 4, 4], [4, [12.929997, 2.169591, 0.0, -1.118072], 37.967196, 4, 5, 4], [5, [12.929997, 2.169591, 0.0, -1.118072], 41.254858, 4, 5, 4], [6, [12.929997, 2.169591, 0.0, -1.118072], 44.542521, 4, 5, 4], [7, [11.094048, 2.256643, 0.0, -0.92838], 47.778598, 4, 4, 4], [8, [7.805414, 2.218538, 0.0, -0.558229], 50.933327, 4, 4, 4], [9, [5.531989, 1.915432, 0.0, -0.157066], 53.547941, 4, 4, 4], [10, [4.801362, 1.933678, 0.0, -0.075018], 55.59423, 4, 4, 4], [11, [4.76056, 1.880897, 0.0, -0.056802], 57.564857, 4, 4, 4], [12, [5.095105, 1.847742, 0.0, -0.075018], 59.49834, 4, 4, 4], [13, [5.095105, 1.847742, 0.0, -0.075018], 61.4211, 4, 4, 4], [14, [5.638474, 1.688777, 0.0, -0.075018], 63.297054, 4, 4, 4], [15, [5.638474, 1.688777, 0.0, -0.075018], 65.060849, 4, 4, 4], [16, [5.792593, 1.464937, 0.0, 0.0], 66.661215, 4, 3, 6], [17, [5.792593, 1.464937, 0.0, 0.0], 68.126152, 4, 3, 6], [18, [8.451613, 0.68703, 0.0, 0.0], 69.011702, 4, 3, 6], [19, [8.451613, 0.68703, 0.0, 0.0], 69.698732, 4, 3, 6], [20, [10.8, 0.0, 0.0, 0.0], 69.9, 4, 3, None]]\n"]}]},{"cell_type":"code","source":["print_sheet('salinity', 'c', end=24, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4Xdjal4RDruT","executionInfo":{"status":"ok","timestamp":1669535381391,"user_tz":300,"elapsed":29653,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"33e6f0f6-0e79-4d0a-ab0e-f514827581cb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: RuntimeWarning: divide by zero encountered in double_scalars\n","  # This is added back by InteractiveShellApp.init_path()\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [14.212097, 1.857135, -0.175602, -0.868549], 24.416163, 4, 4, 4], [1, [12.783269, 1.86257, -0.099825, -0.763898], 27.230633, 4, 4, 4], [2, [12.887341, 1.811339, -0.029021, -0.768583], 29.856372, 4, 4, 4], [3, [12.955865, 1.808307, 0.0, -0.774825], 32.465304, 4, 4, 4], [4, [12.955865, 1.808307, 0.0, -0.774825], 35.048437, 4, 5, 4], [5, [12.929997, 1.790341, 0.0, -0.770503], 37.620765, 4, 5, 4], [6, [12.929997, 1.790341, 0.0, -0.770503], 40.181609, 4, 5, 4], [7, [12.929997, 1.790341, 0.0, -0.770503], 42.742453, 4, 4, 4], [8, [12.929997, 1.790341, 0.0, -0.770503], 45.303297, 4, 4, 4], [9, [12.929997, 1.790341, 0.0, -0.770503], 47.864141, 4, 4, 4], [10, [12.929997, 1.790341, 0.0, -0.770503], 50.424986, 4, 4, 4], [11, [12.929997, 1.790341, 0.0, -0.770503], 52.98583, 4, 4, 4], [12, [7.215757, 1.642812, 0.0, -0.259052], 55.078952, 4, 4, 4], [13, [5.531989, 1.58061, 0.0, -0.10824], 56.850502, 4, 4, 4], [14, [5.095105, 1.524752, 0.0, -0.051698], 58.495515, 4, 4, 4], [15, [5.095105, 1.524752, 0.0, -0.051698], 60.071965, 4, 4, 4], [16, [5.095105, 1.524752, 0.0, -0.051698], 61.648415, 4, 3, 4], [17, [5.638474, 1.393575, 0.0, -0.051698], 63.17355, 4, 3, 4], [18, [6.355156, 1.296636, 0.0, -0.069581], 64.615451, 4, 3, 4], [19, [6.355156, 1.296636, 0.0, -0.069581], 65.981667, 4, 3, 4], [20, [6.430459, 1.202378, 0.0, -0.051698], 67.272207, 4, 3, 4], [21, [8.709862, 0.652096, 0.0, -0.051698], 68.476969, 4, 3, 4], [22, [8.451613, 0.566935, 0.0, 0.0], 69.117742, 4, 3, 6], [23, [8.451613, 0.566935, 0.0, 0.0], 69.684677, 4, 3, 6], [24, [10.8, 0.0, 0.0, 0.0], 69.9, 4, 2, None]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('salinity', 'd', end=20, step=3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZEsxjuyeK9A7","executionInfo":{"status":"ok","timestamp":1670114678690,"user_tz":300,"elapsed":8633,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"ab532027-ed9e-4527-dc62-01bec904467c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [10.553571, 0.7033, -0.096756, -0.546208], 24.562003, 5, 5, 4], [3, [10.553571, 0.715505, -0.033984, -0.47406], 28.370173, 5, 6, 4], [6, [10.553571, 0.722113, 0.0, -0.435001], 31.964188, 5, 5, 4], [9, [10.553571, 0.726391, 0.0, -0.378788], 35.285793, 5, 5, 4], [12, [10.553571, 0.726391, 0.0, -0.378788], 38.601328, 5, 4, 4], [15, [10.553571, 0.726391, 0.0, -0.378788], 41.916864, 5, 4, 4], [18, [10.553571, 0.726391, 0.0, -0.378788], 45.232399, 5, 3, 4], [21, [10.553571, 0.730543, 0.0, -0.217465], 48.272002, 5, 3, 4], [24, [10.553571, 0.720163, 0.0, -0.194739], 51.102414, 5, 2, 4], [27, [10.553571, 0.700928, 0.0, -0.152626], 53.740004, 5, 2, 4], [30, [10.553571, 0.635766, 0.0, -0.00996], 55.694929, 5, 2, 4], [33, [10.553571, 0.635766, 0.0, -0.00996], 57.632106, 5, 2, 4], [36, [10.553571, 0.626132, 0.0, -0.009893], 59.55085, 5, 2, 4], [39, [10.553571, 0.626132, 0.0, -0.009893], 61.458924, 5, 2, 4], [42, [10.553571, 0.589373, 0.0, -0.009636], 63.278748, 5, 2, 4], [45, [10.553571, 0.589373, 0.0, -0.009636], 65.075775, 5, 2, 4], [48, [10.553571, 0.400271, 0.0, 0.0], 66.698779, 5, 2, 6], [51, [10.553571, 0.400271, 0.0, 0.0], 67.899593, 5, 1, 6], [54, [10.553571, 0.29876, 0.0, 0.0], 68.94814, 5, 1, 6], [57, [10.553571, 0.29876, 0.0, 0.0], 69.844419, 5, 1, 6], [60, [10.553571, 0.0, 0.0, 0.0], 70.392857, 5, 1, None]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('salinity', 'e', end=20, step=3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_7oPSA2NLhy4","executionInfo":{"status":"ok","timestamp":1670114753210,"user_tz":300,"elapsed":9113,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"c73fbb9b-a323-4f5e-fdf9-902c66302faa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [11.15, 0.708385, -0.052259, -0.504666], 24.669745, 4, 4, 4], [3, [11.15, 0.736826, 0.0, -0.395397], 28.305452, 4, 5, 4], [6, [11.15, 0.740106, 0.0, -0.38035], 31.668465, 4, 5, 4], [9, [11.15, 0.740106, 0.0, -0.38035], 35.029834, 4, 4, 4], [12, [11.15, 0.705999, 0.0, -0.40374], 38.382118, 4, 4, 4], [15, [11.15, 0.705999, 0.0, -0.40374], 41.711335, 4, 4, 4], [18, [11.15, 0.705999, 0.0, -0.40374], 45.040552, 4, 3, 4], [21, [11.15, 0.737948, 0.0, -0.296936], 48.183218, 4, 3, 4], [24, [11.15, 0.737948, 0.0, -0.296936], 51.287869, 4, 3, 4], [27, [11.15, 0.674747, 0.0, -0.20202], 53.946667, 4, 2, 4], [30, [11.15, 0.584876, 0.0, -0.048096], 56.037755, 4, 2, 4], [33, [11.15, 0.584876, 0.0, -0.048096], 57.936672, 4, 2, 4], [36, [11.15, 0.572453, 0.0, -0.048392], 59.801282, 4, 2, 4], [39, [11.15, 0.572453, 0.0, -0.048392], 61.663818, 4, 2, 4], [42, [11.15, 0.562529, 0.0, -0.033489], 63.515759, 4, 2, 4], [45, [11.15, 0.54023, 0.0, 0.0], 65.225287, 4, 2, 6], [48, [11.15, 0.54023, 0.0, 0.0], 66.845977, 4, 1, 6], [51, [11.15, 0.469388, 0.0, 0.0], 68.261224, 4, 1, 6], [54, [11.15, 0.122807, 0.0, 0.0], 69.322807, 4, 1, 6], [57, [11.15, 0.122807, 0.0, 0.0], 69.691228, 4, 1, 6], [60, [11.15, 0.0, 0.0, 0.0], 69.9, 4, 1, None]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('salinity', 'f', end=20, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mgFza8-mmVDm","executionInfo":{"status":"ok","timestamp":1670114912750,"user_tz":300,"elapsed":8668,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"b5dcd6be-06c3-4b34-a4a2-b71ad538272e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-5-e8b02119499b>:12: RuntimeWarning: invalid value encountered in double_scalars\n","  X[j,k] = (X[j,k]-c[k])/sd[k]\n","<ipython-input-7-28b63f0ad177>:10: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [10.553571, 2.139833, -0.170552, -1.50421], 24.562003, 5, 5, 4], [1, [10.553571, 2.166815, -0.059211, -1.31554], 28.241585, 5, 6, 4], [2, [10.553571, 2.184455, -0.037598, -1.265469], 31.781262, 5, 5, 4], [3, [10.553571, 2.210088, 0.0, -1.04315], 35.098901, 5, 5, 4], [4, [10.553571, 2.210088, 0.0, -1.04315], 38.352139, 5, 5, 4], [5, [10.553571, 2.210088, 0.0, -1.04315], 41.605377, 5, 4, 4], [6, [10.553571, 2.210088, 0.0, -1.04315], 44.858615, 5, 4, 4], [7, [10.553571, 2.197937, 0.0, -0.718105], 48.078597, 5, 3, 4], [8, [10.553571, 2.222723, 0.0, -0.59888], 50.936654, 5, 3, 4], [9, [10.553571, 2.132617, 0.0, -0.420318], 53.670469, 5, 3, 4], [10, [10.553571, 1.934357, 0.0, -0.027429], 55.941011, 5, 3, 4], [11, [10.553571, 1.934357, 0.0, -0.027429], 57.902796, 5, 2, 4], [12, [10.553571, 1.905045, 0.0, -0.027244], 59.841426, 5, 2, 4], [13, [10.553571, 1.905045, 0.0, -0.027244], 61.773716, 5, 2, 4], [14, [10.553571, 1.793204, 0.0, -0.026536], 63.596736, 5, 2, 4], [15, [10.553571, 1.793204, 0.0, -0.026536], 65.416477, 5, 2, 4], [16, [10.553571, 1.22794, 0.0, -0.022961], 66.968845, 5, 2, 4], [17, [10.553571, 1.21785, 0.0, 0.0], 68.189208, 5, 2, 6], [18, [10.553571, 0.908995, 0.0, 0.0], 69.177022, 5, 2, 6], [19, [10.553571, 0.908995, 0.0, 0.0], 70.086018, 5, 2, 6], [20, [10.553571, 0.0, 0.0, 0.0], 70.392857, 5, 2, None]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('salinity', 'g', end=24, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jHPhpPnkMBQ8","executionInfo":{"status":"ok","timestamp":1670114921295,"user_tz":300,"elapsed":8577,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"442f7a88-2b60-49ad-e502-205bb3a035e7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-12-aa6762306108>:12: RuntimeWarning: invalid value encountered in double_scalars\n","  X[j,k] = (X[j,k]-c[k])/sd[k]\n","<ipython-input-14-674ae01502c6>:11: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [11.15, 1.778552, -0.082121, -0.957766], 24.669745, 4, 4, 4], [1, [11.15, 1.805221, -0.051452, -0.880319], 27.429865, 4, 5, 4], [2, [11.15, 1.858195, 0.0, -0.721837], 30.105791, 4, 5, 4], [3, [11.15, 1.772563, 0.0, -0.766226], 32.681615, 4, 5, 4], [4, [11.15, 1.772563, 0.0, -0.766226], 35.220403, 4, 5, 4], [5, [11.15, 1.772563, 0.0, -0.766226], 37.759192, 4, 4, 4], [6, [11.15, 1.772563, 0.0, -0.766226], 40.297981, 4, 4, 4], [7, [11.15, 1.772563, 0.0, -0.766226], 42.836769, 4, 4, 4], [8, [11.15, 1.772563, 0.0, -0.766226], 45.375558, 4, 4, 4], [9, [11.15, 1.772563, 0.0, -0.766226], 47.914347, 4, 3, 4], [10, [11.15, 1.772563, 0.0, -0.766226], 50.453135, 4, 3, 4], [11, [11.15, 1.772563, 0.0, -0.766226], 52.991924, 4, 3, 4], [12, [11.15, 1.694098, 0.0, -0.383398], 55.203896, 4, 3, 4], [13, [11.15, 1.501095, 0.0, -0.1643], 57.269341, 4, 3, 4], [14, [11.15, 1.437265, 0.0, -0.09184], 58.858333, 4, 3, 4], [15, [11.15, 1.437265, 0.0, -0.09184], 60.387438, 4, 2, 4], [16, [11.15, 1.437265, 0.0, -0.09184], 61.916543, 4, 2, 4], [17, [11.15, 1.415982, 0.0, -0.092224], 63.439762, 4, 2, 4], [18, [11.15, 1.415982, 0.0, -0.092224], 64.947967, 4, 2, 4], [19, [11.15, 1.415982, 0.0, -0.092224], 66.456173, 4, 2, 4], [20, [11.15, 1.147653, 0.0, -0.097065], 67.731698, 4, 2, 4], [21, [11.15, 1.147653, 0.0, -0.097065], 68.976417, 4, 2, 4], [22, [11.15, 0.308333, 0.0, 0.0], 69.474561, 4, 2, 6], [23, [11.15, 0.308333, 0.0, 0.0], 69.782895, 4, 2, 6], [24, [11.15, 0.0, 0.0, 0.0], 69.9, 4, 2, None]]\n"]}]},{"cell_type":"markdown","source":["### aircraft"],"metadata":{"id":"st9tgi4_ofyy"}},{"cell_type":"code","source":["print_sheet('aircraft', 'a', end=20, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fGmMgJixAmTL","executionInfo":{"status":"ok","timestamp":1669056382302,"user_tz":300,"elapsed":109528,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"8e9c1e0c-abb9-4f2a-cfe7-205f2cd2897b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [1.951096, -3.04663, 1.473594, 0.00223, -0.000965], 119.717938, 2, 2, 2], [1, [-0.890917, -2.695816, 1.524527, 0.002344, -0.001003], 124.000091, 2, 2, 2], [2, [-1.088514, -2.560406, 1.480391, 0.002333, -0.000992], 128.173639, 2, 2, 2], [3, [-1.088514, -2.560406, 1.480391, 0.002333, -0.000992], 132.217759, 2, 2, 2], [4, [-4.080457, -2.114097, 1.32641, 0.002379, -0.000883], 135.979478, 2, 2, 2], [5, [-9.247434, -0.90719, 1.197744, 0.002358, -0.000799], 138.599723, 2, 2, 2], [6, [-9.247434, -0.90719, 1.197744, 0.002358, -0.000799], 140.707815, 2, 2, 2], [7, [-9.247434, -0.90719, 1.197744, 0.002358, -0.000799], 142.815906, 2, 2, 2], [8, [-9.247434, -0.90719, 1.197744, 0.002358, -0.000799], 144.923998, 2, 2, 2], [9, [-13.46374, 0.0, 0.0, 0.002758, -0.000955], 145.859706, 2, 2, 4], [10, [-13.46374, 0.0, 0.0, 0.002758, -0.000955], 145.86342, 2, 2, 4], [11, [-13.46374, 0.0, 0.0, 0.002758, -0.000955], 145.867133, 2, 2, 4], [12, [-13.46374, 0.0, 0.0, 0.002758, -0.000955], 145.870846, 2, 2, 4], [13, [-13.46374, 0.0, 0.0, 0.002758, -0.000955], 145.87456, 2, 2, 4], [14, [-13.46374, 0.0, 0.0, 0.002758, -0.000955], 145.878273, 2, 2, 4], [15, [-13.46374, 0.0, 0.0, 0.002758, -0.000955], 145.881987, 2, 2, 4], [16, [-13.46374, 0.0, 0.0, 0.002758, -0.000955], 145.8857, 2, 2, 4], [17, [-13.46374, 0.0, 0.0, 0.002758, -0.000955], 145.889413, 2, 1, 4], [18, [-13.46374, 0.0, 0.0, 0.002758, -0.000955], 145.893127, 2, 1, 4], [19, [-13.46374, 0.0, 0.0, 0.002758, -0.000955], 145.89684, 2, 1, 4], [20, [-13.46374, 0.0, 0.0, 0.002758, -0.000955], 145.900553, 2, 1, 4]]\n"]}]},{"cell_type":"code","source":["print_sheet('aircraft', 'b', end=17, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6LIspOO6ApRi","executionInfo":{"status":"ok","timestamp":1669049640080,"user_tz":300,"elapsed":97750,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"31f0134e-c6de-4080-d291-255eee6ba10b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:10: RuntimeWarning: divide by zero encountered in double_scalars\n","  # Remove the CWD from sys.path while we load stuff.\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [1.951096, -4.205169, 2.603973, 20.811713, -9.847212], 119.717938, 2, 2, 2], [1, [-1.207813, -3.370529, 2.44748, 20.807872, -9.035522], 156.845672, 2, 2, 2], [2, [6.599943, -2.910578, 0.699039, 10.011372, 0.0], 174.135966, 2, 2, 2], [3, [8.491041, -3.172244, 0.715562, 9.198054, 0.0], 187.678169, 2, 2, 2], [4, [11.149037, -2.937397, 0.707298, 6.866584, 0.0], 199.892606, 2, 2, 2], [5, [10.839606, -2.724761, 0.761244, 6.414041, 0.0], 209.802448, 2, 2, 2], [6, [10.216007, -2.508156, 0.731902, 6.490634, 0.0], 219.587386, 2, 2, 2], [7, [10.216007, -2.508156, 0.731902, 6.490634, 0.0], 229.318077, 2, 2, 2], [8, [10.216007, -2.508156, 0.731902, 6.490634, 0.0], 239.048768, 2, 2, 2], [9, [10.216007, -2.508156, 0.731902, 6.490634, 0.0], 248.779459, 2, 2, 2], [10, [11.556834, -2.027183, 0.0, 4.952216, 0.0], 256.477284, 2, 2, 4], [11, [11.631483, -1.817759, 0.0, 4.720493, 0.0], 263.136, 2, 2, 4], [12, [12.093703, -1.646454, 0.0, 2.104753, 2.45392], 269.635551, 2, 2, 4], [13, [12.093703, -1.646454, 0.0, 2.104753, 2.45392], 275.840677, 2, 2, 4], [14, [12.423403, -1.097302, 0.0, 0.686966, 3.273342], 281.377248, 2, 2, 4], [15, [9.668812, 0.0, 0.0, 0.0, 3.456698], 285.749384, 2, 2, 5], [16, [13.360909, 0.0, 0.0, 0.0, 0.222728], 287.34347, 2, 2, 5], [17, [13.59, 0.0, 0.0, 0.0, 0.0], 287.43, 2, 1, None], [18, [13.59, 0.0, 0.0, 0.0, 0.0], 287.43, 2, 1, None], [19, [13.59, 0.0, 0.0, 0.0, 0.0], 287.43, 2, 1, None], [20, [13.59, 0.0, 0.0, 0.0, 0.0], 287.43, 2, 1, None]]\n"]}]},{"cell_type":"code","source":["print_sheet('aircraft', 'c', end=20, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"to52A2pOCH-A","executionInfo":{"status":"ok","timestamp":1669049741061,"user_tz":300,"elapsed":100987,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"3a826d84-ab9c-4229-9f51-4dfe5f254587"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: RuntimeWarning: divide by zero encountered in double_scalars\n","  # This is added back by InteractiveShellApp.init_path()\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [1.951096, -3.470509, 1.646581, 15.506338, -7.914083], 119.717938, 2, 2, 2], [1, [1.911314, -3.445626, 1.634587, 15.448009, -7.839712], 148.197183, 2, 2, 2], [2, [6.599943, -2.402089, 0.442026, 7.459248, 0.0], 167.500713, 2, 2, 2], [3, [6.599943, -2.402089, 0.442026, 7.459248, 0.0], 177.804075, 2, 2, 2], [4, [6.599943, -2.402089, 0.442026, 7.459248, 0.0], 188.107438, 2, 2, 2], [5, [11.149037, -2.424223, 0.447248, 5.116137, 0.0], 197.78553, 2, 2, 2], [6, [10.839606, -2.248735, 0.48136, 4.778957, 0.0], 205.356533, 2, 2, 2], [7, [10.216007, -2.069971, 0.462806, 4.836025, 0.0], 212.784856, 2, 2, 2], [8, [10.216007, -2.069971, 0.462806, 4.836025, 0.0], 220.153658, 2, 2, 2], [9, [10.216007, -2.069971, 0.462806, 4.836025, 0.0], 227.52246, 2, 2, 2], [10, [10.216007, -2.069971, 0.462806, 4.836025, 0.0], 234.891262, 2, 2, 2], [11, [10.216007, -2.069971, 0.462806, 4.836025, 0.0], 242.260065, 2, 2, 2], [12, [7.761656, -1.332243, 0.406829, 4.916799, 0.0], 249.206078, 2, 2, 2], [13, [7.761656, -1.332243, 0.406829, 4.916799, 0.0], 255.861949, 2, 2, 2], [14, [11.631483, -1.500189, 0.0, 3.517133, 0.0], 261.457741, 2, 2, 4], [15, [11.631483, -1.500189, 0.0, 3.517133, 0.0], 266.475063, 2, 2, 4], [16, [11.631483, -1.500189, 0.0, 3.517133, 0.0], 271.492386, 2, 2, 4], [17, [11.631483, -1.500189, 0.0, 3.517133, 0.0], 276.509708, 2, 1, 4], [18, [7.546842, -0.454072, 0.0, 3.549367, 0.0], 281.281317, 2, 1, 4], [19, [6.398657, 0.0, 0.0, 3.199909, 0.0], 284.899451, 2, 1, 4], [20, [10.003368, 0.0, 0.0, 1.248619, 0.0], 286.764298, 2, 1, 4]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('aircraft', 'd', end=20, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1a1tMGAbGvS-","executionInfo":{"status":"ok","timestamp":1669056470902,"user_tz":300,"elapsed":33097,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"00f5ccfb-4b30-417b-9c82-bcc374fd4871"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [20.326957, -2.140201, 1.334875, 0.002382, -0.000885], 122.075249, 3, 3, 2], [1, [20.326957, -2.140201, 1.334875, 0.002382, -0.000885], 125.553592, 3, 3, 2], [2, [20.326957, -2.140201, 1.334875, 0.002382, -0.000885], 129.031935, 3, 3, 2], [3, [20.326957, -2.140201, 1.334875, 0.002382, -0.000885], 132.510278, 3, 3, 2], [4, [20.326957, -2.125587, 1.326795, 0.002373, -0.000879], 135.981984, 3, 3, 2], [5, [20.326957, -0.988404, 1.21467, 0.002332, -0.000811], 138.73355, 3, 3, 2], [6, [20.326957, -0.988404, 1.21467, 0.002332, -0.000811], 140.939768, 3, 2, 2], [7, [20.326957, -0.808224, 1.181825, 0.002321, -0.00076], 142.974931, 3, 2, 2], [8, [20.326957, -0.808224, 1.181825, 0.002321, -0.00076], 144.968061, 3, 2, 2], [9, [20.326957, 0.0, 0.0, 0.002584, -0.000804], 145.955379, 3, 2, 4], [10, [20.326957, 0.0, 0.0, 0.002584, -0.000804], 145.958767, 3, 2, 4], [11, [20.326957, 0.0, 0.0, 0.002584, -0.000804], 145.962155, 3, 2, 4], [12, [20.326957, 0.0, 0.0, 0.002584, -0.000804], 145.965543, 3, 2, 4], [13, [20.326957, 0.0, 0.0, 0.002584, -0.000804], 145.968932, 3, 2, 4], [14, [20.326957, 0.0, 0.0, 0.002584, -0.000804], 145.97232, 3, 2, 4], [15, [20.326957, 0.0, 0.0, 0.002584, -0.000804], 145.975708, 3, 2, 4], [16, [20.326957, 0.0, 0.0, 0.002584, -0.000804], 145.979096, 3, 2, 4], [17, [20.326957, 0.0, 0.0, 0.002584, -0.000804], 145.982484, 3, 2, 4], [18, [20.326957, 0.0, 0.0, 0.002584, -0.000804], 145.985872, 3, 2, 4], [19, [20.326957, 0.0, 0.0, 0.002584, -0.000804], 145.98926, 3, 1, 4], [20, [20.326957, 0.0, 0.0, 0.002584, -0.000804], 145.992648, 3, 1, 4]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('aircraft', 'e', end=20, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QUOBfhx8Haz4","executionInfo":{"status":"ok","timestamp":1669056506646,"user_tz":300,"elapsed":35750,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"4cc0058f-d8d3-41d6-94ef-139ed7b5a562"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [13.59, -1.962976, 1.277402, 0.002364, -0.000873], 123.558308, 2, 2, 2], [1, [13.59, -1.962976, 1.277402, 0.002364, -0.000873], 126.801923, 2, 2, 2], [2, [13.59, -1.962976, 1.277402, 0.002364, -0.000873], 130.045537, 2, 3, 2], [3, [13.59, -1.640659, 1.283915, 0.002425, -0.000898], 133.182379, 2, 2, 2], [4, [13.59, -1.640659, 1.283915, 0.002425, -0.000898], 136.110275, 2, 2, 2], [5, [13.59, -0.988049, 1.21075, 0.00239, -0.000831], 138.620795, 2, 2, 2], [6, [13.59, -0.988049, 1.21075, 0.00239, -0.000831], 140.822815, 2, 2, 2], [7, [13.59, -0.988049, 1.21075, 0.00239, -0.000831], 143.024834, 2, 2, 2], [8, [13.59, -0.405838, 1.145477, 0.002358, -0.000771], 145.016133, 2, 2, 2], [9, [13.59, 0.0, 0.0, 0.002707, -0.000911], 145.887893, 2, 2, 4], [10, [13.59, 0.0, 0.0, 0.002707, -0.000911], 145.89151, 2, 2, 4], [11, [13.59, 0.0, 0.0, 0.002707, -0.000911], 145.895128, 2, 2, 4], [12, [13.59, 0.0, 0.0, 0.002707, -0.000911], 145.898745, 2, 2, 4], [13, [13.59, 0.0, 0.0, 0.002707, -0.000911], 145.902363, 2, 2, 4], [14, [13.59, 0.0, 0.0, 0.002707, -0.000911], 145.90598, 2, 2, 4], [15, [13.59, 0.0, 0.0, 0.002707, -0.000911], 145.909598, 2, 2, 4], [16, [13.59, 0.0, 0.0, 0.002707, -0.000911], 145.913216, 2, 2, 4], [17, [13.59, 0.0, 0.0, 0.002707, -0.000911], 145.916833, 2, 2, 4], [18, [13.59, 0.0, 0.0, 0.002707, -0.000911], 145.920451, 2, 1, 4], [19, [13.59, 0.0, 0.0, 0.002707, -0.000911], 145.924068, 2, 1, 4], [20, [13.59, 0.0, 0.0, 0.002707, -0.000911], 145.927686, 2, 1, 4]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('aircraft', 'f', end=17, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_3ZOptaNMnpb","executionInfo":{"status":"ok","timestamp":1669051502168,"user_tz":300,"elapsed":19094,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"79bf6450-4e39-4400-c6ee-6021e6309767"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:12: RuntimeWarning: invalid value encountered in double_scalars\n","  if sys.path[0] == '':\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [20.326957, -2.954053, 2.358846, 22.221732, -9.031295], 122.075249, 3, 3, 2], [1, [20.326957, -2.933882, 2.344567, 22.146108, -8.970257], 158.55426, 3, 4, 2], [2, [20.326957, -2.758827, 0.537204, 11.717976, 0.0], 183.076621, 3, 4, 2], [3, [20.326957, -2.53838, 0.247175, 9.597357, 0.0], 196.025424, 3, 3, 2], [4, [20.326957, -2.53838, 0.247175, 9.597357, 0.0], 208.408336, 3, 2, 2], [5, [20.326957, -2.460529, 0.241262, 9.59534, 0.0], 220.724509, 3, 2, 2], [6, [20.326957, -2.460529, 0.241262, 9.59534, 0.0], 233.02164, 3, 2, 2], [7, [20.326957, -2.460529, 0.241262, 9.59534, 0.0], 245.31877, 3, 2, 2], [8, [20.326957, -2.013273, 0.207291, 9.58375, 0.0], 257.172257, 3, 2, 2], [9, [20.326957, -1.922875, 0.200425, 9.581408, 0.0], 268.94476, 3, 2, 2], [10, [20.326957, -2.057692, 0.0, 9.529321, 0.0], 280.561815, 3, 2, 4], [11, [20.326957, -2.057692, 0.0, 9.529321, 0.0], 292.148829, 3, 2, 4], [12, [20.326957, 0.0, 0.0, 9.110757, 0.0], 302.601326, 3, 2, 4], [13, [20.326957, 0.0, 0.0, 5.729166, 0.0], 310.303305, 3, 2, 4], [14, [20.326957, 0.0, 0.0, 5.729166, 0.0], 316.03247, 3, 2, 4], [15, [20.326957, 0.0, 0.0, 5.729166, 0.0], 321.761636, 3, 2, 4], [16, [20.326957, 0.0, 0.0, 0.377936, 0.0], 323.24264, 3, 2, 4], [17, [20.326957, 0.0, 0.0, 0.377936, 0.0], 323.620576, 3, 2, 4]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('aircraft', 'g', end=20, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZvZq5WhPMqQ4","executionInfo":{"status":"ok","timestamp":1669056165845,"user_tz":300,"elapsed":27754,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"b29e7fae-69a6-45e1-e654-ad607db8a0fd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:12: RuntimeWarning: invalid value encountered in double_scalars\n","  if sys.path[0] == '':\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [13.59, -2.236086, 1.427358, 16.433286, -7.161272], 123.558308, 2, 2, 2], [1, [13.59, -2.184373, 1.253654, 14.151657, -5.621869], 150.000381, 2, 3, 2], [2, [13.59, -1.97878, 0.712601, 8.168568, -0.27726], 169.940028, 2, 3, 2], [3, [13.59, -1.859184, 0.644143, 6.799978, 0.0], 180.432888, 2, 3, 2], [4, [13.59, -1.859184, 0.644143, 6.799978, 0.0], 189.736192, 2, 3, 2], [5, [13.59, -2.004377, 0.598192, 5.159798, 0.0], 198.694556, 2, 2, 2], [6, [13.59, -1.865711, 0.592923, 5.223495, 0.0], 206.391618, 2, 2, 2], [7, [13.59, -1.865711, 0.592923, 5.223495, 0.0], 214.073747, 2, 2, 2], [8, [13.59, -1.865711, 0.592923, 5.223495, 0.0], 221.755876, 2, 2, 2], [9, [13.59, -1.865711, 0.592923, 5.223495, 0.0], 229.438005, 2, 2, 2], [10, [13.59, -1.869129, 0.566098, 4.397886, 0.0], 236.439168, 2, 2, 2], [11, [13.59, -1.869129, 0.566098, 4.397886, 0.0], 243.272281, 2, 2, 2], [12, [13.59, -1.87056, 0.554871, 4.052338, 0.0], 249.926709, 2, 2, 2], [13, [13.59, -1.902181, 0.306733, 3.825468, 0.0], 256.301653, 2, 2, 2], [14, [13.59, -1.823416, 0.134189, 3.667712, 0.0], 262.013904, 2, 2, 2], [15, [13.59, -1.180367, 0.072862, 3.611641, 0.0], 267.11641, 2, 2, 2], [16, [13.59, -1.180367, 0.072862, 3.611641, 0.0], 271.981281, 2, 2, 2], [17, [13.59, -1.180367, 0.072862, 3.611641, 0.0], 276.846151, 2, 2, 2], [18, [13.59, -0.445585, 0.002786, 3.547572, 0.0], 281.283683, 2, 2, 2], [19, [13.59, 0.0, 0.0, 3.474374, 0.0], 285.069771, 2, 2, 4], [20, [13.59, 0.0, 0.0, 0.145138, 0.0], 287.246568, 2, 2, 4]]\n"]}]},{"cell_type":"code","source":["print_sheet('aircraft', 'aa', end=10, step=0.1, start=8)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HYRUhiWU58pB","executionInfo":{"status":"ok","timestamp":1670389594247,"user_tz":300,"elapsed":56488,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"b56be63c-ac95-45b5-effb-7599b16a74ce"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [8.0, [-9.247434, -0.90719, 1.197744, 0.002358, -0.000799], 144.923998, 2, 2, 2], [8.1, [-9.247434, -0.90719, 1.197744, 0.002358, -0.000799], 145.134807, 2, 2, 2], [8.2, [-11.510716, -0.376467, 1.142415, 0.002358, -0.00077], 145.325932, 2, 2, 2], [8.3, [-11.510716, -0.376467, 1.142415, 0.002358, -0.00077], 145.478133, 2, 2, 2], [8.4, [-13.15983, 0.0, 0.9299, 0.002432, -0.000791], 145.5778, 2, 2, 2], [8.5, [-13.15983, 0.0, 0.9299, 0.002432, -0.000791], 145.671113, 2, 2, 2], [8.6, [-13.15983, 0.0, 0.9299, 0.002432, -0.000791], 145.764425, 2, 2, 2], [8.7, [-13.327163, 0.0, 0.265815, 0.002718, -0.000954], 145.829492, 2, 2, 2], [8.8, [-13.327163, 0.0, 0.265815, 0.002718, -0.000954], 145.85644, 2, 2, 2], [8.9, [-13.46374, 0.0, 0.0, 0.002758, -0.000955], 145.859335, 2, 2, 4], [9.0, [-13.46374, 0.0, 0.0, 0.002758, -0.000955], 145.859706, 2, 2, 4]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('aircraft', 'dd', end=10, step=0.1, start=8)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-l8Qspbn6JSY","executionInfo":{"status":"ok","timestamp":1670389611303,"user_tz":300,"elapsed":17079,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"97ce1bbb-2b1f-43c9-d766-77948544c5c5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [8.0, [20.326957, -0.808224, 1.181825, 0.002321, -0.00076], 144.968061, 3, 2, 2], [8.1, [20.326957, -0.808224, 1.181825, 0.002321, -0.00076], 145.167374, 3, 2, 2], [8.2, [20.326957, -0.621286, 1.161254, 0.002313, -0.000743], 145.364538, 3, 2, 2], [8.3, [20.326957, -0.621286, 1.161254, 0.002313, -0.000743], 145.543097, 3, 2, 2], [8.4, [20.326957, -0.621286, 1.161254, 0.002313, -0.000743], 145.721657, 3, 2, 2], [8.5, [20.326957, 0.0, 0.520141, 0.002443, -0.000749], 145.826358, 3, 2, 2], [8.6, [20.326957, 0.0, 0.520141, 0.002443, -0.000749], 145.878691, 3, 2, 2], [8.7, [20.326957, 0.0, 0.520141, 0.002443, -0.000749], 145.931024, 3, 2, 2], [8.8, [20.326957, 0.0, 0.0, 0.002584, -0.000804], 145.954702, 3, 2, 4], [8.9, [20.326957, 0.0, 0.0, 0.002584, -0.000804], 145.95504, 3, 2, 4], [9.0, [20.326957, 0.0, 0.0, 0.002584, -0.000804], 145.955379, 3, 2, 4]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('aircraft', 'ee', end=10, step=0.1, start=8)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4XVczURD6Lhn","executionInfo":{"status":"ok","timestamp":1670389637704,"user_tz":300,"elapsed":18223,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"4cb0c9f7-dcb6-4917-fbdf-a717bfe1eebf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [8.0, [13.59, -0.405838, 1.145477, 0.002358, -0.000771], 145.016133, 2, 2, 2], [8.1, [13.59, -0.405838, 1.145477, 0.002358, -0.000771], 145.171577, 2, 2, 2], [8.2, [13.59, -0.366647, 1.14473, 0.002363, -0.000772], 145.326857, 2, 2, 2], [8.3, [13.59, -0.366647, 1.14473, 0.002363, -0.000772], 145.478308, 2, 2, 2], [8.4, [13.59, 0.0, 1.046598, 0.002472, -0.000821], 145.589611, 2, 2, 2], [8.5, [13.59, 0.0, 1.046598, 0.002472, -0.000821], 145.694601, 2, 2, 2], [8.6, [13.59, 0.0, 0.805116, 0.002435, -0.000778], 145.799222, 2, 2, 2], [8.7, [13.59, 0.0, 0.805116, 0.002435, -0.000778], 145.880055, 2, 2, 2], [8.8, [13.59, 0.0, 0.0, 0.002707, -0.000911], 145.887169, 2, 2, 4], [8.9, [13.59, 0.0, 0.0, 0.002707, -0.000911], 145.887531, 2, 2, 4], [9.0, [13.59, 0.0, 0.0, 0.002707, -0.000911], 145.887893, 2, 2, 4]]\n"]}]},{"cell_type":"code","source":["print_sheet('aircraft', 'bb', end=10, step=0.1, start=14)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U3lYQDMT_1w3","executionInfo":{"status":"ok","timestamp":1670389980994,"user_tz":300,"elapsed":52633,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"e0053691-2c9a-4f94-c247-84ea04fc1525"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-7-28b63f0ad177>:10: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [14.0, [12.423403, -1.097302, 0.0, 0.686966, 3.273342], 281.377248, 2, 2, 4], [14.1, [12.423403, -1.097302, 0.0, 0.686966, 3.273342], 281.883009, 2, 2, 4], [14.2, [12.423403, -1.097302, 0.0, 0.686966, 3.273342], 282.38877, 2, 2, 4], [14.3, [12.423403, -1.097302, 0.0, 0.686966, 3.273342], 282.894531, 2, 2, 4], [14.4, [13.62179, -1.184852, 0.0, 0.0, 3.307413], 283.345932, 2, 2, 4], [14.5, [13.62179, -1.184852, 0.0, 0.0, 3.307413], 283.795159, 2, 2, 4], [14.6, [13.481131, -1.130535, 0.0, 0.0, 3.291127], 284.237435, 2, 2, 4], [14.7, [13.481131, -1.130535, 0.0, 0.0, 3.291127], 284.679601, 2, 2, 4], [14.8, [9.668812, 0.0, 0.0, 0.0, 3.456698], 285.058045, 2, 2, 5], [14.9, [9.668812, 0.0, 0.0, 0.0, 3.456698], 285.403715, 2, 2, 5], [15.0, [9.668812, 0.0, 0.0, 0.0, 3.456698], 285.749384, 2, 2, 5]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('aircraft', 'ff', end=10, step=0.1, start=14)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"civ8ZU7F_5rJ","executionInfo":{"status":"ok","timestamp":1670389993086,"user_tz":300,"elapsed":10692,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"f1c131ac-87d8-4dbf-d3e7-2370ec341af2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-5-e8b02119499b>:12: RuntimeWarning: invalid value encountered in double_scalars\n","  X[j,k] = (X[j,k]-c[k])/sd[k]\n","<ipython-input-7-28b63f0ad177>:10: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [14.0, [20.326957, 0.0, 0.0, 5.729166, 0.0], 316.03247, 3, 2, 4], [14.1, [20.326957, 0.0, 0.0, 5.729166, 0.0], 316.605387, 3, 2, 4], [14.2, [20.326957, 0.0, 0.0, 5.729166, 0.0], 317.178303, 3, 2, 4], [14.3, [20.326957, 0.0, 0.0, 5.729166, 0.0], 317.75122, 3, 2, 4], [14.4, [20.326957, 0.0, 0.0, 5.729166, 0.0], 318.324137, 3, 2, 4], [14.5, [20.326957, 0.0, 0.0, 5.729166, 0.0], 318.897053, 3, 2, 4], [14.6, [20.326957, 0.0, 0.0, 5.729166, 0.0], 319.46997, 3, 2, 4], [14.7, [20.326957, 0.0, 0.0, 5.729166, 0.0], 320.042886, 3, 2, 4], [14.8, [20.326957, 0.0, 0.0, 5.729166, 0.0], 320.615803, 3, 2, 4], [14.9, [20.326957, 0.0, 0.0, 5.729166, 0.0], 321.188719, 3, 2, 4], [15.0, [20.326957, 0.0, 0.0, 5.729166, 0.0], 321.761636, 3, 2, 4]]\n"]}]},{"cell_type":"code","source":["print_sheet('aircraft', 'cc', end=10, step=0.1, start=18)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a6rH4hiKA5-a","executionInfo":{"status":"ok","timestamp":1670390257091,"user_tz":300,"elapsed":48603,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"ca6589c1-f5e8-4090-a4bd-a516fe54bd98"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-14-674ae01502c6>:11: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [18.0, [7.546842, -0.454072, 0.0, 3.549367, 0.0], 281.281317, 2, 1, 4], [18.1, [7.546842, -0.454072, 0.0, 3.549367, 0.0], 281.681661, 2, 1, 4], [18.2, [7.546842, -0.454072, 0.0, 3.549367, 0.0], 282.082005, 2, 1, 4], [18.3, [7.546842, -0.454072, 0.0, 3.549367, 0.0], 282.482349, 2, 1, 4], [18.4, [5.66376, 0.0, 0.149059, 3.453299, 0.0], 282.848833, 2, 1, 2], [18.5, [5.66376, 0.0, 0.149059, 3.453299, 0.0], 283.209069, 2, 1, 2], [18.6, [6.059737, 0.0, 0.0, 3.220233, 0.316997], 283.566335, 2, 1, 4], [18.7, [6.059737, 0.0, 0.0, 3.220233, 0.316997], 283.920058, 2, 1, 4], [18.8, [6.398657, 0.0, 0.0, 3.199909, 0.0], 284.259469, 2, 1, 4], [18.9, [6.398657, 0.0, 0.0, 3.199909, 0.0], 284.57946, 2, 1, 4], [19.0, [6.398657, 0.0, 0.0, 3.199909, 0.0], 284.899451, 2, 1, 4]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('aircraft', 'gg', end=10, step=0.1, start=18)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IjmR7NbyA4CQ","executionInfo":{"status":"ok","timestamp":1670390269985,"user_tz":300,"elapsed":12909,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"dd4d0fc9-254c-4c0a-c1ef-c3ae8ed62d9b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-12-aa6762306108>:12: RuntimeWarning: invalid value encountered in double_scalars\n","  X[j,k] = (X[j,k]-c[k])/sd[k]\n","<ipython-input-14-674ae01502c6>:11: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [18.0, [13.59, -0.445585, 0.002786, 3.547572, 0.0], 281.283683, 2, 2, 2], [18.1, [13.59, -0.445585, 0.002786, 3.547572, 0.0], 281.683277, 2, 2, 2], [18.2, [13.59, -0.445585, 0.002786, 3.547572, 0.0], 282.082871, 2, 2, 2], [18.3, [13.59, -0.445585, 0.002786, 3.547572, 0.0], 282.482465, 2, 2, 2], [18.4, [13.59, -0.429071, 0.0, 3.531246, 0.017453], 282.881382, 2, 2, 4], [18.5, [13.59, -0.429071, 0.0, 3.531246, 0.017453], 283.279159, 2, 2, 4], [18.6, [13.59, 0.0, 0.0, 3.046107, 0.469114], 283.67245, 2, 2, 4], [18.7, [13.59, 0.0, 0.0, 3.046107, 0.469114], 284.023972, 2, 2, 4], [18.8, [13.59, 0.0, 0.0, 3.474374, 0.0], 284.374896, 2, 2, 4], [18.9, [13.59, 0.0, 0.0, 3.474374, 0.0], 284.722334, 2, 2, 4], [19.0, [13.59, 0.0, 0.0, 3.474374, 0.0], 285.069771, 2, 2, 4]]\n"]}]},{"cell_type":"code","source":["print_single('aircraft', 'aaa', lbd = 150000)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p-unGdhCCmBK","executionInfo":{"status":"ok","timestamp":1670978068269,"user_tz":300,"elapsed":11257,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"c90bff2d-473e-4049-8567-832f0900cbc3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [150000, [9.668812, 0.0, 0.0, 0.0, 0.000339], 284.69099, 2, 1, 5]]\n"]}]},{"cell_type":"code","source":["print_single_center('aircraft', 'ddd', lbd = 150000)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gBsXcinxEu7r","executionInfo":{"status":"ok","timestamp":1670979018136,"user_tz":300,"elapsed":7562,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"33a3575d-fe66-4f50-da4d-d77e8505c118"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [150000, [20.326957, 0.0, 0.0, 0.0, 3.2e-05], 323.180037, 3, 1, 5]]\n"]}]},{"cell_type":"code","source":["print_single_center('aircraft', 'eee', lbd = 150000)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"17Uv6o67KE9o","executionInfo":{"status":"ok","timestamp":1670979892828,"user_tz":300,"elapsed":7023,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"0dc92fef-bad4-45c4-efa2-10141dee5585"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [150000, [13.59, 0.0, 0.0, 0.0, 0.000191], 285.222239, 2, 1, 5]]\n"]}]},{"cell_type":"markdown","source":["### wood"],"metadata":{"id":"sza3Tyys-l8P"}},{"cell_type":"code","source":["print_sheet('wood', 'a', end=10, step=0.1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m4BiGYzwct_I","executionInfo":{"status":"ok","timestamp":1669085215177,"user_tz":300,"elapsed":131925,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"9708048f-4899-470f-e103-c9142187a0ac"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0.0, [0.424093, 0.406509, -1.564256, -0.324531, 0.119953, 0.18077], 0.300761, 3, 3, 3], [0.1, [0.495348, 0.183979, -0.93884, -0.076487, 0.184001, -0.036589], 0.468741, 3, 4, 3], [0.2, [0.375844, 0.138116, 0.0, 0.0, 0.252371, -0.093703], 0.559363, 3, 2, 3], [0.3, [0.375844, 0.138116, 0.0, 0.0, 0.252371, -0.093703], 0.607782, 3, 2, 3], [0.4, [0.331047, 0.155566, 0.0, 0.0, 0.162376, 0.0], 0.650861, 3, 1, 4], [0.5, [0.340695, 0.158929, 0.0, 0.0, 0.137557, 0.0], 0.681748, 3, 1, 4], [0.6, [0.340695, 0.158929, 0.0, 0.0, 0.137557, 0.0], 0.711397, 3, 1, 4], [0.7, [0.476039, 0.061111, 0.0, 0.0, 0.0, 0.0], 0.718639, 3, 1, 5], [0.8, [0.494053, 0.026667, 0.0, 0.0, 0.0, 0.0], 0.7232, 3, 1, 5], [0.9, [0.494053, 0.026667, 0.0, 0.0, 0.0, 0.0], 0.725867, 3, 1, 5], [1.0, [0.508, 0.0, 0.0, 0.0, 0.0, 0.0], 0.726, 3, 1, None]]\n"]}]},{"cell_type":"code","source":["print_sheet('wood', 'b', end=11, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w55shbtL08jr","executionInfo":{"status":"ok","timestamp":1669085357744,"user_tz":300,"elapsed":142574,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"33141c5d-c855-469e-abc5-72c7e6ef4ce1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:10: RuntimeWarning: divide by zero encountered in double_scalars\n","  # Remove the CWD from sys.path while we load stuff.\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [0.424093, 0.03608, -0.033708, -0.020463, 0.007345, 0.009251], 0.300761, 3, 3, 3], [1, [0.504154, 0.019239, -0.023693, -0.009424, 0.010982, 0.0], 0.372503, 3, 1, 3], [2, [0.479437, 0.018322, -0.022422, -0.005294, 0.009732, 0.0], 0.434872, 3, 1, 3], [3, [0.496981, 0.016136, -0.020267, -0.004577, 0.011182, -0.001951], 0.490259, 3, 1, 3], [4, [0.461789, 0.017667, -0.021515, -0.002346, 0.008839, 0.0], 0.541945, 3, 1, 3], [5, [0.445352, 0.014382, -0.015731, 0.0, 0.007235, 0.0], 0.586873, 3, 1, 3], [6, [0.435525, 0.012123, -0.014585, 0.0, 0.009042, 0.0], 0.622789, 3, 1, 3], [7, [0.43728, 0.006847, -0.013331, 0.0, 0.011209, 0.0], 0.654956, 3, 1, 3], [8, [0.43728, 0.006847, -0.013331, 0.0, 0.011209, 0.0], 0.686343, 3, 1, 3], [9, [0.43728, 0.006847, -0.013331, 0.0, 0.011209, 0.0], 0.71773, 3, 1, 3], [10, [0.492308, 0.0, 0.0, 0.0, 0.00157, 0.0], 0.72493, 3, 1, 5], [11, [0.508, 0.0, 0.0, 0.0, 0.0, 0.0], 0.726, 3, 1, None]]\n"]}]},{"cell_type":"code","source":["print_sheet('wood', 'c', end=12, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UkOBUMDZF8ZX","executionInfo":{"status":"ok","timestamp":1669085545325,"user_tz":300,"elapsed":158982,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"ed1b8f62-2674-423e-8bda-1fe3e423c199"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: RuntimeWarning: divide by zero encountered in double_scalars\n","  # This is added back by InteractiveShellApp.init_path()\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [0.424093, 0.030061, -0.028673, -0.015886, 0.00613, 0.00733], 0.300761, 3, 3, 3], [1, [0.504154, 0.01603, -0.020154, -0.007316, 0.009166, 0.0], 0.36183, 3, 1, 3], [2, [0.504154, 0.01603, -0.020154, -0.007316, 0.009166, 0.0], 0.414496, 3, 1, 3], [3, [0.479437, 0.015266, -0.019073, -0.00411, 0.008122, 0.0], 0.463044, 3, 1, 3], [4, [0.496981, 0.013445, -0.01724, -0.003553, 0.009332, -0.001546], 0.508382, 3, 1, 3], [5, [0.461789, 0.01472, -0.018301, -0.001821, 0.007377, 0.0], 0.551574, 3, 1, 3], [6, [0.445352, 0.011983, -0.013382, 0.0, 0.006038, 0.0], 0.588548, 3, 1, 3], [7, [0.435525, 0.0101, -0.012406, 0.0, 0.007547, 0.0], 0.618663, 3, 1, 3], [8, [0.43728, 0.005705, -0.01134, 0.0, 0.009355, 0.0], 0.646443, 3, 1, 3], [9, [0.43728, 0.005705, -0.01134, 0.0, 0.009355, 0.0], 0.672843, 3, 1, 3], [10, [0.43728, 0.005705, -0.01134, 0.0, 0.009355, 0.0], 0.699242, 3, 1, 3], [11, [0.494053, 0.001972, 0.0, 0.0, 0.0, 0.0], 0.723559, 3, 1, 5], [12, [0.492308, 0.0, 0.0, 0.0, 0.00131, 0.0], 0.724954, 3, 1, 5]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('wood', 'd', end=10, step=0.1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rf7rPZRZJToo","executionInfo":{"status":"ok","timestamp":1670115091029,"user_tz":300,"elapsed":39347,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"528de1d3-4379-400d-bcf4-fa73af5f6819"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0.0, [0.501, 0.384765, -1.478523, -0.326942, 0.136626, 0.100645], 0.302518, 3, 3, 3], [0.1, [0.501, 0.239954, -0.732916, -0.102121, 0.124482, 0.0], 0.488961, 3, 4, 3], [0.2, [0.501, 0.274348, 0.0, 0.0, 0.15329, -0.06731], 0.575778, 3, 2, 3], [0.3, [0.501, 0.230012, 0.0, 0.0, 0.138938, -0.024527], 0.620559, 3, 2, 3], [0.4, [0.501, 0.199639, 0.0, 0.0, 0.136162, 0.0], 0.655127, 3, 1, 4], [0.5, [0.501, 0.145558, 0.0, 0.0, 0.152448, 0.0], 0.685188, 3, 1, 4], [0.6, [0.501, 0.137511, 0.0, 0.0, 0.107437, 0.0], 0.711644, 3, 1, 4], [0.7, [0.501, 0.0, 0.0, 0.0, 0.017007, 0.0], 0.736007, 3, 1, 5], [0.8, [0.501, 0.0, 0.0, 0.0, 0.017007, 0.0], 0.737707, 3, 1, 5], [0.9, [0.501, 0.0, 0.0, 0.0, 0.0, 0.0], 0.738, 3, 1, None], [1.0, [0.501, 0.0, 0.0, 0.0, 0.0, 0.0], 0.738, 3, 1, None]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('wood', 'e', end=10, step=0.1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"34pId-Q-LElg","executionInfo":{"status":"ok","timestamp":1670115127788,"user_tz":300,"elapsed":36775,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"5cdbe924-ba40-4b29-87f7-f0a278eea828"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0.0, [0.507, 0.342455, -1.435409, -0.30235, 0.095228, -0.042664], 0.325824, 3, 3, 3], [0.1, [0.507, 0.201008, -0.55722, -0.063503, 0.245438, 0.0], 0.518114, 3, 4, 3], [0.2, [0.507, 0.119397, 0.0, 0.0, 0.39972, -0.07143], 0.605692, 3, 2, 3], [0.3, [0.507, 0.101471, 0.0, 0.0, 0.121878, 0.0], 0.654963, 3, 2, 4], [0.4, [0.507, 0.097705, 0.0, 0.0, 0.104981, 0.0], 0.677027, 3, 1, 4], [0.5, [0.507, 0.097705, 0.0, 0.0, 0.104981, 0.0], 0.697295, 3, 1, 4], [0.6, [0.507, 0.080327, 0.0, 0.0, 0.027022, 0.0], 0.712306, 3, 1, 4], [0.7, [0.507, 0.074303, 0.0, 0.0, 0.0, 0.0], 0.722663, 3, 1, 5], [0.8, [0.507, 0.010695, 0.0, 0.0, 0.0, 0.0], 0.724877, 3, 1, 5], [0.9, [0.507, 0.010695, 0.0, 0.0, 0.0, 0.0], 0.725947, 3, 1, 5], [1.0, [0.507, 0.0, 0.0, 0.0, 0.0, 0.0], 0.726, 3, 1, None]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('wood', 'f', end=11, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JIUFVc-EqmKr","executionInfo":{"status":"ok","timestamp":1669085625669,"user_tz":300,"elapsed":36250,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"20152d88-73b0-410a-a3f0-d3bb53e4efca"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:12: RuntimeWarning: invalid value encountered in double_scalars\n","  if sys.path[0] == '':\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:10: RuntimeWarning: divide by zero encountered in double_scalars\n","  # Remove the CWD from sys.path while we load stuff.\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [0.501, 0.03415, -0.03186, -0.020615, 0.008365, 0.005151], 0.302518, 3, 3, 3], [1, [0.501, 0.030434, -0.029278, -0.018872, 0.008531, 0.0], 0.39442, 3, 4, 3], [2, [0.501, 0.020443, -0.020022, -0.009891, 0.007214, 0.0], 0.461495, 3, 4, 3], [3, [0.501, 0.018536, -0.017644, -0.00439, 0.007113, 0.0], 0.516092, 3, 4, 3], [4, [0.501, 0.018536, -0.017644, -0.00439, 0.007113, 0.0], 0.563775, 3, 3, 3], [5, [0.501, 0.017015, -0.015747, 0.0, 0.007033, 0.0], 0.604996, 3, 3, 3], [6, [0.501, 0.012355, -0.012019, 0.0, 0.00658, 0.0], 0.638774, 3, 3, 3], [7, [0.501, 0.012266, -0.012037, 0.0, 0.006237, 0.0], 0.669554, 3, 2, 3], [8, [0.501, 0.007427, -0.008256, 0.0, 0.005426, 0.0], 0.698505, 3, 2, 3], [9, [0.501, 0.007427, -0.008256, 0.0, 0.005426, 0.0], 0.719614, 3, 2, 3], [10, [0.501, 0.0, -0.002454, 0.0, 0.00418, 0.0], 0.72906, 3, 2, 4], [11, [0.501, 0.0, 0.0, 0.0, 0.004252, 0.0], 0.734188, 3, 2, 5]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('wood', 'g', end=12, step=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xx8Q7Lonz7Ra","executionInfo":{"status":"ok","timestamp":1669085659775,"user_tz":300,"elapsed":34124,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"c7389cbb-fbdd-4d83-ddb5-0ecc155a0f26"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:12: RuntimeWarning: invalid value encountered in double_scalars\n","  if sys.path[0] == '':\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: RuntimeWarning: divide by zero encountered in double_scalars\n","  # This is added back by InteractiveShellApp.init_path()\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0, [0.507, 0.025325, -0.026311, -0.0148, 0.004866, -0.00173], 0.325824, 3, 3, 3], [1, [0.507, 0.025963, -0.023173, -0.017068, 0.004361, 0.0], 0.397509, 3, 4, 3], [2, [0.507, 0.021665, -0.023096, -0.01356, 0.004056, 0.0], 0.464226, 3, 4, 3], [3, [0.507, 0.022982, -0.019867, -0.011313, 0.004201, 0.0], 0.525325, 3, 4, 3], [4, [0.507, 0.018389, -0.014416, 0.0, 0.004137, 0.0], 0.566474, 3, 4, 3], [5, [0.507, 0.01777, -0.013905, 0.0, 0.004015, 0.0], 0.603293, 3, 3, 3], [6, [0.507, 0.008108, -0.017379, 0.0, 0.00292, 0.0], 0.635747, 3, 3, 3], [7, [0.507, 0.007911, -0.0158, 0.0, 0.00278, 0.0], 0.663904, 3, 3, 3], [8, [0.507, 0.007437, -0.004883, 0.0, 0.004566, 0.0], 0.684237, 3, 3, 3], [9, [0.507, 0.006515, -0.004606, 0.0, 0.001789, 0.0], 0.698618, 3, 2, 3], [10, [0.507, 0.006464, -0.004564, 0.0, 0.001779, 0.0], 0.711462, 3, 2, 3], [11, [0.507, 0.00094, 0.0, 0.0, 0.000686, 0.0], 0.723603, 3, 2, 4], [12, [0.507, 0.00094, 0.0, 0.0, 0.000686, 0.0], 0.725229, 3, 2, 4]]\n"]}]},{"cell_type":"code","source":["print_sheet('wood', 'aa', end=2, step=0.05, start = 0.1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w7-jK8viON56","executionInfo":{"status":"ok","timestamp":1670394810098,"user_tz":300,"elapsed":50526,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"ee7a0aae-d941-413c-fda3-2833b918f9cc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0.1, [0.495348, 0.183979, -0.93884, -0.076487, 0.184001, -0.036589], 0.468741, 3, 4, 3], [0.15, [0.376801, 0.14633, -0.092689, 0.0, 0.232721, -0.075042], 0.533428, 3, 3, 3], [0.2, [0.375844, 0.138116, 0.0, 0.0, 0.252371, -0.093703], 0.559363, 3, 2, 3]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('wood', 'dd', end=2, step=0.05, start = 0.1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F_9lZdpFO0fM","executionInfo":{"status":"ok","timestamp":1670394823569,"user_tz":300,"elapsed":13493,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"782ab6b2-733f-4d31-e3ba-1b85724b084e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0.1, [0.501, 0.239954, -0.732916, -0.102121, 0.124482, 0.0], 0.488961, 3, 4, 3], [0.15, [0.501, 0.149223, 0.0, -0.179767, 0.318765, -0.201743], 0.545391, 3, 3, 3], [0.2, [0.501, 0.274348, 0.0, 0.0, 0.15329, -0.06731], 0.575778, 3, 2, 3]]\n"]}]},{"cell_type":"code","source":["print_sheet_center('wood', 'ee', end=2, step=0.05, start = 0.1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kUiOz8OTO64k","executionInfo":{"status":"ok","timestamp":1670394838676,"user_tz":300,"elapsed":15117,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"837338f7-79b6-470f-9188-bc3a2fd39ff7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [0.1, [0.507, 0.201008, -0.55722, -0.063503, 0.245438, 0.0], 0.518114, 3, 4, 3], [0.15, [0.507, 0.107586, -0.190831, -0.098677, 0.395912, -0.103053], 0.570513, 3, 3, 3], [0.2, [0.507, 0.119397, 0.0, 0.0, 0.39972, -0.07143], 0.605692, 3, 2, 3]]\n"]}]},{"cell_type":"code","source":["print_single('wood', 'bbb', lbd = 9.195)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"goa5GRJYT9aQ","executionInfo":{"status":"ok","timestamp":1670395378060,"user_tz":300,"elapsed":27221,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"9eea837d-0700-455d-df02-f323877316f0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-7-28b63f0ad177>:10: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [9.195, [0.487578, 0.005491, -0.001948, 0.0, 0.0, 0.0], 0.723623, 3, 1, 3]]\n"]}]},{"cell_type":"code","source":["print_single_center('wood', 'fff', lbd = 9.195)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-C_jG8pfUlL0","executionInfo":{"status":"ok","timestamp":1670395640717,"user_tz":300,"elapsed":10718,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"b1a62f8d-66c2-4656-e7f7-3c3175790a1a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-5-e8b02119499b>:12: RuntimeWarning: invalid value encountered in double_scalars\n","  X[j,k] = (X[j,k]-c[k])/sd[k]\n","<ipython-input-7-28b63f0ad177>:10: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [9.195, [0.501, 0.0, -0.002454, 0.0, 0.00418, 0.0], 0.72372, 3, 2, 4]]\n"]}]},{"cell_type":"code","source":["print_single('wood', 'ccc', lbd = 10.93)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HlAVKGW7Vih2","executionInfo":{"status":"ok","timestamp":1670395659034,"user_tz":300,"elapsed":18328,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"5ae6b434-e689-4fae-ac3b-558061e088e4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-14-674ae01502c6>:11: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [10.93, [0.487578, 0.004575, -0.001657, 0.0, 0.0, 0.0], 0.723338, 3, 1, 3]]\n"]}]},{"cell_type":"code","source":["print_single_center('wood', 'ggg', lbd = 10.93)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9omqu4oBVl5u","executionInfo":{"status":"ok","timestamp":1670395669208,"user_tz":300,"elapsed":10200,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"4d16e553-1895-4bb4-e055-e96a94b5693b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-12-aa6762306108>:12: RuntimeWarning: invalid value encountered in double_scalars\n","  X[j,k] = (X[j,k]-c[k])/sd[k]\n","<ipython-input-14-674ae01502c6>:11: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [10.93, [0.507, 0.006464, -0.004564, 0.0, 0.001779, 0.0], 0.723372, 3, 2, 3]]\n"]}]},{"cell_type":"code","source":["print_single_center('wood', 'ggg', lbd = 12.7)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8v4vZje5nz-H","executionInfo":{"status":"ok","timestamp":1671088415932,"user_tz":300,"elapsed":8718,"user":{"displayName":"Bernice Feng","userId":"04135696748972048156"}},"outputId":"58cb0acd-16f9-4a3d-cdf5-445482238994"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-12-aa6762306108>:12: RuntimeWarning: invalid value encountered in double_scalars\n","  X[j,k] = (X[j,k]-c[k])/sd[k]\n","<ipython-input-14-674ae01502c6>:11: RuntimeWarning: divide by zero encountered in double_scalars\n","  X[j,k] = X[j,k]/sd[k]\n"]},{"output_type":"stream","name":"stdout","text":["[['lambda', 'beta', 'LP objective', 'CB', 'CB with LASSO constriants', 'Cols uncentered CB'], [12.7, [0.507, 0.0, 0.0, 0.0, 0.000555, 0.0], 0.725945, 3, 2, 5]]\n"]}]}]}